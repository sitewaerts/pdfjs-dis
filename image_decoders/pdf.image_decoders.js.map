{"version":3,"sources":["webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/universalModuleDefinition","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/bootstrap","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/pdf.image_decoders.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/util.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/compatibility.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/is_node.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jbig2.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/core_utils.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/arithmetic_decoder.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/ccitt.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpg.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpx.js"],"names":["pdfjsVersion","pdfjsBuild","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","constructor","name","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","removeNullCharacters","str","replace","bytesToString","bytes","length","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","rgbBuf","Util","makeCssRgb","r","g","b","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","PDFStringTranslateTable","stringToPDFString","charAt","escapeString","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isBool","isNum","isString","isArrayBuffer","isArrayEqual","arr1","arr2","every","element","index","getModificationDate","date","Date","now","getUTCFullYear","toString","getUTCMonth","padStart","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","create","isSettled","get","promise","Promise","resolve","reject","reason","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","type","ii","b1","b2","b3","d1","d2","d3","d4","isNodeJS","process","versions","nw","electron","Jbig2Error","Jbig2Image","Jbig2ImageClosure","ContextCache","getContexts","id","Int8Array","DecodingContext","start","end","decoder","ArithmeticDecoder","contextCache","cache","decodeInteger","procedure","contexts","prev","readBits","bit","readBit","sign","decodeIAID","codeLength","SegmentTypes","CodingTemplates","x","y","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","width","height","decodingContext","contextLabel","j","pixel","row","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","skip","at","input","Reader","decodeMMRBitmap","useskip","template","concat","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","k","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","Uint16Array","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","i0","j0","shift","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","log2","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","decode","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","byteAlign","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","position","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","t","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","s2","t2","symbolRow","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","number","readUint32","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","readUint16","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","args","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","chunks","SimpleSegmentVisitor","parseJbig2","numberOfPages","currentPageInfo","bitPacked","imgData","Uint8ClampedArray","q","mask","onPageInformation","SimpleSegmentVisitor_onPageInformation","rowSize","drawBitmap","SimpleSegmentVisitor_drawBitmap","regionInfo","mask0","offset0","offset","onImmediateGenericRegion","SimpleSegmentVisitor_onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","SimpleSegmentVisitor_onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","SimpleSegmentVisitor_onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSymbols","onImmediateTextRegion","SimpleSegmentVisitor_onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","SimpleSegmentVisitor_onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeTablesSegment","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","buildTree","node","decodeNode","reader","htOffset","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","table","currentByte","numBits","next","getCustomHuffmanTable","currentIndex","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","params","K","Columns","Rows","BlackIs1","EndOfBlock","CCITTFaxDecoder","eof","readNextChar","lookForEOFLimit","parseChunks","parse","getLookupTableFactory","initializer","lookup","MissingDataException","begin","XRefEntryException","XRefParseException","getInheritableProperty","dict","key","getArray","stopWhenFound","LOOP_LIMIT","loopCount","values","ROMAN_NUMBER_MAP","toRomanNumerals","lowerCase","romanBuf","romanStr","toLowerCase","ceil","isWhiteSpace","ch","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","options","encoding","eoline","EndOfLine","EncodedByteAlign","columns","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","refPos","blackPixels","bits","err","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limit","limitValue","n","JpegError","DNLMarkerError","scanLines","EOIMarkerError","JpegImage","JpegImageClosure","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","decodeTransform","colorTransform","_decodeTransform","_colorTransform","buildHuffmanTable","codeLengths","pop","getBlockBufferOffset","component","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","maybeScanLines","blockRow","precision","round","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","blockOffset","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockCol","h","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","partialMsg","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v0","v1","v2","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","startPos","maxPos","newPos","currentMarker","newMarker","dnlScanLines","readDataBlock","endOffset","array","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","l","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentsCount","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","output","scaleX","scaleY","numComponents","_getLinearizedBlockData","isSourcePDF","componentScaleX","componentScaleY","blocksPerScanline","dataLength","xScaleBlockOffset","mask3LSB","lastComponentScaleX","_isColorConversionNeeded","_convertYccToRgb","convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","convertYcckToRgb","_convertYcckToCmyk","convertYcckToCmyk","_convertCmykToRgb","convertCmykToRgb","getData","forceRGB","rgbData","grayColor","JpxError","JpxImage","JpxImageClosure","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","JpxImage_parse","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","JpxImage_parseImageProperties","stream","newByte","getByte","oldByte","Xsiz","getInt32","Ysiz","XOsiz","YOsiz","Csiz","getUint16","bitsPerComponent","JpxImage_parseCodestream","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","mainHeader","siz","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","calculateComponentDimensions","SIZ","calculateTileGrids","QCC","COC","qcd","noQuantization","guardBits","spqcd","epsilon","mu","SPqcds","QCD","currentTile","qcc","cqcc","cod","scod","entropyCoderWithCustomPrecincts","sopMarkerUsed","ephMarkerUsed","progressionOrder","layersCount","multipleComponentTransform","decompositionLevelsCount","xcb","ycb","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","segmentationSymbolUsed","reversibleTransformation","precinctsSizes","precinctsSize","PPx","PPy","unsupported","COD","partIndex","partsCount","initializeTile","buildPackets","parseTilePackets","tiles","transformComponents","x0","x1","y0","y1","numXtiles","numYtiles","tx0","ty0","tx1","ty1","jj","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","xcb_","ycb_","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","floor","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","codeblock","precinctNumber","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","codingStyleDefaultParameters","maxDecompositionLevelsCount","nextPacket","JpxImage_nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","Array","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","packetsIterator","bufferSize","skipNextBit","count","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","included","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","reset","nextLevel","incrementValue","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","totalLength","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","nb","interleave","levelOffset","transformTile","quantizationParameters","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","gainLog2","items","calculate","left","top","resultImages","transformedTiles","tile0","out","y2","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","qcdOrQcc","TagTreeClosure","levelsLength","levels","TagTree_reset","currentLevel","TagTree_incrementValue","TagTree_nextLevel","InclusionTreeClosure","defaultValue","InclusionTree_reset","stopValue","propagateValues","InclusionTree_incrementValue","InclusionTree_propagateValues","levelIndex","currentValue","InclusionTree_nextLevel","BitModelClosure","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","BitModel_setDecoder","BitModel_reset","setNeighborsSignificance","BitModel_setNeighborsSignificance","column","BitModel_runSignificancePropagationPass","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","BitModel_decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","BitModel_runMagnitudeRefinementPass","width4","index0","indexNext","significance","BitModel_runCleanupPass","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","BitModel_checkSegmentationSymbol","Transform","TransformClosure","transformCalculate","u0","ll","iterate","extend","size","j1","j2","Transform_iterate","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","filter","numBuffers","colBuffers","currentBuffer","IrreversibleTransformClosure","call","irreversibleTransformFilter","len","current","alpha","beta","gamma","K_","ReversibleTransformClosure","reversibleTransformFilter"],"mappings":"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","file":"pdf.image_decoders.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/image_decoders/pdf.image_decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getVerbosityLevel, setVerbosityLevel } from \"./shared/util.js\";\nimport { Jbig2mage } from \"./core/jbig2.js\";\nimport { JpegImage } from \"./core/jpg.js\";\nimport { JpxImage } from \"./core/jpx.js\";\n\n// To ensure that the standalone PDF.js image decoders have the same\n// browser/environment compatibility as the regular PDF.js library,\n// the standard set of polyfills are thus included in this build as well.\n//\n// Given that the (current) image decoders don't use all of the features\n// of the complete PDF.js library, e.g. they are completely synchronous,\n// some of the larger polyfills are thus unnecessary.\n//\n// In an attempt to reduce the size of the standalone PDF.js image decoders,\n// the following polyfills are currently being excluded:\n//  - ReadableStream\n//  - Promise\n//  - URL\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport { Jbig2mage, JpegImage, JpxImage, getVerbosityLevel, setVerbosityLevel };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\" and \"\\\" by \"\\(\", \"\\)\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date(Date.now())) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    (date.getUTCDate() + 1).toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  escapeString,\n  getModificationDate,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: IE, Chrome<73\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n\n  // Provides support for Object.entries in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectEntries() {\n    if (Object.entries) {\n      return;\n    }\n    Object.entries = require(\"core-js/es/object/entries.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport { log2, readInt8, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(`JBIG2 error: ${msg}`);\n  }\n}\n\nvar Jbig2Image = (function Jbig2ImageClosure() {\n  // Utility data structures\n  function ContextCache() {}\n\n  ContextCache.prototype = {\n    getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return (this[id] = new Int8Array(1 << 16));\n    },\n  };\n\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n      return shadow(this, \"decoder\", decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return shadow(this, \"contextCache\", cache);\n    },\n  };\n\n  // Annex A. Arithmetic Integer Decoding Procedure\n  // A.2 Procedure for decoding values\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev =\n          prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n        v = (v << 1) | bit;\n      }\n      return v >>> 0;\n    }\n\n    var sign = readBits(1);\n    // prettier-ignore\n    /* eslint-disable no-nested-ternary */\n    var value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n    /* eslint-enable no-nested-ternary */\n    if (sign === 0) {\n      return value;\n    } else if (value > 0) {\n      return -value;\n    }\n    return null;\n  }\n\n  // A.3 The IAID decoding procedure\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts(\"IAID\");\n\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = (prev << 1) | bit;\n    }\n    if (codeLength < 31) {\n      return prev & ((1 << codeLength) - 1);\n    }\n    return prev & 0x7fffffff;\n  }\n\n  // 7.3 Segment types\n  var SegmentTypes = [\n    \"SymbolDictionary\",\n    null,\n    null,\n    null,\n    \"IntermediateTextRegion\",\n    null,\n    \"ImmediateTextRegion\",\n    \"ImmediateLosslessTextRegion\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"PatternDictionary\",\n    null,\n    null,\n    null,\n    \"IntermediateHalftoneRegion\",\n    null,\n    \"ImmediateHalftoneRegion\",\n    \"ImmediateLosslessHalftoneRegion\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"IntermediateGenericRegion\",\n    null,\n    \"ImmediateGenericRegion\",\n    \"ImmediateLosslessGenericRegion\",\n    \"IntermediateGenericRefinementRegion\",\n    null,\n    \"ImmediateGenericRefinementRegion\",\n    \"ImmediateLosslessGenericRefinementRegion\",\n    null,\n    null,\n    null,\n    null,\n    \"PageInformation\",\n    \"EndOfPage\",\n    \"EndOfStripe\",\n    \"EndOfFile\",\n    \"Profiles\",\n    \"Tables\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Extension\",\n  ];\n\n  var CodingTemplates = [\n    [\n      { x: -1, y: -2 },\n      { x: 0, y: -2 },\n      { x: 1, y: -2 },\n      { x: -2, y: -1 },\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: 2, y: -1 },\n      { x: -4, y: 0 },\n      { x: -3, y: 0 },\n      { x: -2, y: 0 },\n      { x: -1, y: 0 },\n    ],\n    [\n      { x: -1, y: -2 },\n      { x: 0, y: -2 },\n      { x: 1, y: -2 },\n      { x: 2, y: -2 },\n      { x: -2, y: -1 },\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: 2, y: -1 },\n      { x: -3, y: 0 },\n      { x: -2, y: 0 },\n      { x: -1, y: 0 },\n    ],\n    [\n      { x: -1, y: -2 },\n      { x: 0, y: -2 },\n      { x: 1, y: -2 },\n      { x: -2, y: -1 },\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -2, y: 0 },\n      { x: -1, y: 0 },\n    ],\n    [\n      { x: -3, y: -1 },\n      { x: -2, y: -1 },\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -4, y: 0 },\n      { x: -3, y: 0 },\n      { x: -2, y: 0 },\n      { x: -1, y: 0 },\n    ],\n  ];\n\n  var RefinementTemplates = [\n    {\n      coding: [\n        { x: 0, y: -1 },\n        { x: 1, y: -1 },\n        { x: -1, y: 0 },\n      ],\n      reference: [\n        { x: 0, y: -1 },\n        { x: 1, y: -1 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: -1, y: 1 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n      ],\n    },\n    {\n      coding: [\n        { x: -1, y: -1 },\n        { x: 0, y: -1 },\n        { x: 1, y: -1 },\n        { x: -1, y: 0 },\n      ],\n      reference: [\n        { x: 0, y: -1 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n      ],\n    },\n  ];\n\n  // See 6.2.5.7 Decoding the bitmap.\n  var ReusedContexts = [\n    0x9b25, // 10011 0110010 0101\n    0x0795, // 0011 110010 101\n    0x00e5, // 001 11001 01\n    0x0195, // 011001 0101\n  ];\n\n  var RefinementReusedContexts = [\n    0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n    0x0008, // '0000' + '001000'\n  ];\n\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts(\"GB\");\n    var contextLabel,\n      i,\n      j,\n      pixel,\n      row,\n      row1,\n      row2,\n      bitmap = [];\n\n    // ...ooooo....\n    // ..ooooooo... Context template for current pixel (X)\n    // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n    var OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n\n      // At the beginning of each row:\n      // Fill contextLabel with pixels that are above/right of (X)\n      contextLabel =\n        (row2[0] << 13) |\n        (row2[1] << 12) |\n        (row2[2] << 11) |\n        (row1[0] << 7) |\n        (row1[1] << 6) |\n        (row1[2] << 5) |\n        (row1[3] << 4);\n\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n        // At each pixel: Clear contextLabel pixels that are shifted\n        // out of the context, then add new ones.\n        contextLabel =\n          ((contextLabel & OLD_PIXEL_MASK) << 1) |\n          (j + 3 < width ? row2[j + 3] << 11 : 0) |\n          (j + 4 < width ? row1[j + 4] << 4 : 0) |\n          pixel;\n      }\n    }\n\n    return bitmap;\n  }\n\n  // 6.2 Generic Region Decoding Procedure\n  function decodeBitmap(\n    mmr,\n    width,\n    height,\n    templateIndex,\n    prediction,\n    skip,\n    at,\n    decodingContext\n  ) {\n    if (mmr) {\n      const input = new Reader(\n        decodingContext.data,\n        decodingContext.start,\n        decodingContext.end\n      );\n      return decodeMMRBitmap(input, width, height, false);\n    }\n\n    // Use optimized version for the most common case\n    if (\n      templateIndex === 0 &&\n      !skip &&\n      !prediction &&\n      at.length === 4 &&\n      at[0].x === 3 &&\n      at[0].y === -1 &&\n      at[1].x === -3 &&\n      at[1].y === -1 &&\n      at[2].x === 2 &&\n      at[2].y === -2 &&\n      at[3].x === -2 &&\n      at[3].y === -2\n    ) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n\n    // Sorting is non-standard, and it is not required. But sorting increases\n    // the number of template bits that can be reused from the previous\n    // contextLabel in the main loop.\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n      minX = 0,\n      maxX = 0,\n      minY = 0;\n    var c, k;\n\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      // Check if the template pixel appears in two consecutive context labels,\n      // so it can be reused. Otherwise, we add it to the list of changing\n      // template entries.\n      if (\n        k < templateLength - 1 &&\n        template[k].y === template[k + 1].y &&\n        template[k].x === template[k + 1].x - 1\n      ) {\n        reuseMask |= 1 << (templateLength - 1 - k);\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n    }\n\n    // Get the safe bounding box edges from the width, height, minX, maxX, minY\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n    var ltp = 0,\n      j,\n      i0,\n      j0,\n      contextLabel = 0,\n      bit,\n      shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row); // duplicate previous row\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        // Are we in the middle of a scanline, so we can reuse contextLabel\n        // bits?\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          // If yes, we can just shift the bits that are reusable and only\n          // fetch the remaining ones.\n          contextLabel = (contextLabel << 1) & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          // compute the contextLabel from scratch\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n\n  // 6.3.2 Generic Refinement Region Decoding Procedure\n  function decodeRefinement(\n    width,\n    height,\n    templateIndex,\n    referenceBitmap,\n    offsetX,\n    offsetY,\n    prediction,\n    at,\n    decodingContext\n  ) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error(\"prediction is not supported\");\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1; // out of bound pixel\n          } else {\n            contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (\n            i0 < 0 ||\n            i0 >= referenceHeight ||\n            j0 < 0 ||\n            j0 >= referenceWidth\n          ) {\n            contextLabel <<= 1; // out of bound pixel\n          } else {\n            contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n\n    return bitmap;\n  }\n\n  // 6.5.5 Decoding the symbol dictionary\n  function decodeSymbolDictionary(\n    huffman,\n    refinement,\n    symbols,\n    numberOfNewSymbols,\n    numberOfExportedSymbols,\n    huffmanTables,\n    templateIndex,\n    at,\n    refinementTemplateIndex,\n    refinementAt,\n    decodingContext,\n    huffmanInput\n  ) {\n    if (huffman && refinement) {\n      throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n    }\n\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    let tableB1, symbolWidths;\n    if (huffman) {\n      tableB1 = getStandardTable(1); // standard table B.1\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n    }\n\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman\n        ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n      currentHeight += deltaHeight;\n      let currentWidth = 0,\n        totalWidth = 0;\n      const firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman\n          ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n          : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n        if (deltaWidth === null) {\n          break; // OOB\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n          var numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(\n              huffman,\n              refinement,\n              currentWidth,\n              currentHeight,\n              0,\n              numberOfInstances,\n              1, // strip size\n              symbols.concat(newSymbols),\n              symbolCodeLength,\n              0, // transposed\n              0, // ds offset\n              1, // top left 7.4.3.1.1\n              0, // OR operator\n              huffmanTables,\n              refinementTemplateIndex,\n              refinementAt,\n              decodingContext,\n              0,\n              huffmanInput\n            );\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n            var rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n            var symbol =\n              symbolId < symbols.length\n                ? symbols[symbolId]\n                : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(\n              currentWidth,\n              currentHeight,\n              refinementTemplateIndex,\n              symbol,\n              rdx,\n              rdy,\n              false,\n              refinementAt,\n              decodingContext\n            );\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          // Store only symbol width and decode a collective bitmap when the\n          // height class is done.\n          symbolWidths.push(currentWidth);\n        } else {\n          // 6.5.8.1 Direct-coded symbol bitmap\n          bitmap = decodeBitmap(\n            false,\n            currentWidth,\n            currentHeight,\n            templateIndex,\n            false,\n            null,\n            at,\n            decodingContext\n          );\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        // 6.5.9 Height class collective bitmap\n        const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        let collectiveBitmap;\n        if (bitmapSize === 0) {\n          // Uncompressed collective bitmap\n          collectiveBitmap = readUncompressedBitmap(\n            huffmanInput,\n            totalWidth,\n            currentHeight\n          );\n        } else {\n          // MMR collective bitmap\n          const originalEnd = huffmanInput.end;\n          const bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(\n            huffmanInput,\n            totalWidth,\n            currentHeight,\n            false\n          );\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        const numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          // collectiveBitmap is a single symbol.\n          newSymbols.push(collectiveBitmap);\n        } else {\n          // Divide collectiveBitmap into symbols.\n          let i,\n            y,\n            xMin = 0,\n            xMax,\n            bitmapWidth,\n            symbolBitmap;\n          for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n            bitmapWidth = symbolWidths[i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n\n    // 6.5.10 Exported symbols\n    var exportedSymbols = [];\n    var flags = [],\n      currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman\n        ? tableB1.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IAEX\", decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n\n  function decodeTextRegion(\n    huffman,\n    refinement,\n    width,\n    height,\n    defaultPixelValue,\n    numberOfSymbolInstances,\n    stripSize,\n    inputSymbols,\n    symbolCodeLength,\n    transposed,\n    dsOffset,\n    referenceCorner,\n    combinationOperator,\n    huffmanTables,\n    refinementTemplateIndex,\n    refinementAt,\n    decodingContext,\n    logStripSize,\n    huffmanInput\n  ) {\n    if (huffman && refinement) {\n      throw new Jbig2Error(\"refinement with Huffman is not supported\");\n    }\n\n    // Prepare bitmap\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n\n    var stripT = huffman\n      ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n      : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman\n        ? huffmanTables.tableDeltaT.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n      stripT += deltaT;\n\n      var deltaFirstS = huffman\n        ? huffmanTables.tableFirstS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        let currentT = 0; // 6.4.9\n        if (stripSize > 1) {\n          currentT = huffman\n            ? huffmanInput.readBits(logStripSize)\n            : decodeInteger(contextCache, \"IAIT\", decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman\n          ? huffmanTables.symbolIDTable.decode(huffmanInput)\n          : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement =\n          refinement &&\n          (huffman\n            ? huffmanInput.readBit()\n            : decodeInteger(contextCache, \"IARI\", decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n          var rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n          var rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          var rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(\n            symbolWidth,\n            symbolHeight,\n            refinementTemplateIndex,\n            symbolBitmap,\n            (rdw >> 1) + rdx,\n            (rdh >> 1) + rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          // Place Symbol Bitmap from T1,S1\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            // To ignore Parts of Symbol bitmap which goes\n            // outside bitmap region\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0: // OR\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2: // XOR\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error(\n                  `operator ${combinationOperator} is not supported`\n                );\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0: // OR\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2: // XOR\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error(\n                  `operator ${combinationOperator} is not supported`\n                );\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman\n          ? huffmanTables.tableDeltaS.decode(huffmanInput)\n          : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n        if (deltaS === null) {\n          break; // OOB\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n\n  function decodePatternDictionary(\n    mmr,\n    patternWidth,\n    patternHeight,\n    maxPatternIndex,\n    template,\n    decodingContext\n  ) {\n    const at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0,\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1,\n        });\n        at.push({\n          x: 2,\n          y: -2,\n        });\n        at.push({\n          x: -2,\n          y: -2,\n        });\n      }\n    }\n    const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    const collectiveBitmap = decodeBitmap(\n      mmr,\n      collectiveWidth,\n      patternHeight,\n      template,\n      false,\n      null,\n      at,\n      decodingContext\n    );\n    // Divide collective bitmap into patterns.\n    const patterns = [];\n    for (let i = 0; i <= maxPatternIndex; i++) {\n      const patternBitmap = [];\n      const xMin = patternWidth * i;\n      const xMax = xMin + patternWidth;\n      for (let y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n    }\n    return patterns;\n  }\n\n  function decodeHalftoneRegion(\n    mmr,\n    patterns,\n    template,\n    regionWidth,\n    regionHeight,\n    defaultPixelValue,\n    enableSkip,\n    combinationOperator,\n    gridWidth,\n    gridHeight,\n    gridOffsetX,\n    gridOffsetY,\n    gridVectorX,\n    gridVectorY,\n    decodingContext\n  ) {\n    const skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error(\"skip is not supported\");\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error(\n        \"operator \" +\n          combinationOperator +\n          \" is not supported in halftone region\"\n      );\n    }\n\n    // Prepare bitmap.\n    const regionBitmap = [];\n    let i, j, row;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n\n    const numberOfPatterns = patterns.length;\n    const pattern0 = patterns[0];\n    const patternWidth = pattern0[0].length,\n      patternHeight = pattern0.length;\n    const bitsPerValue = log2(numberOfPatterns);\n    const at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1,\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1,\n        });\n        at.push({\n          x: 2,\n          y: -2,\n        });\n        at.push({\n          x: -2,\n          y: -2,\n        });\n      }\n    }\n    // Annex C. Gray-scale Image Decoding Procedure.\n    const grayScaleBitPlanes = [];\n    let mmrInput, bitmap;\n    if (mmr) {\n      // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n      // the end of each bitmap, so EOFBs must be decoded.\n      mmrInput = new Reader(\n        decodingContext.data,\n        decodingContext.start,\n        decodingContext.end\n      );\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(\n          false,\n          gridWidth,\n          gridHeight,\n          template,\n          false,\n          skip,\n          at,\n          decodingContext\n        );\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    // 6.6.5.2 Rendering the patterns.\n    let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit; // Gray decoding\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n        y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n        // Draw patternBitmap at (x, y).\n        if (\n          x >= 0 &&\n          x + patternWidth <= regionWidth &&\n          y >= 0 &&\n          y + patternHeight <= regionHeight\n        ) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          let regionX, regionY;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = readUint32(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3f;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = (referredFlags >> 5) & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n      position += 3;\n      var bytes = (referredToCount + 7) >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error(\"invalid referred-to flags\");\n    }\n\n    segmentHeader.retainBits = retainBits;\n\n    let referredToSegmentNumberSize = 4;\n    if (segmentHeader.number <= 256) {\n      referredToSegmentNumberSize = 1;\n    } else if (segmentHeader.number <= 65536) {\n      referredToSegmentNumberSize = 2;\n    }\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      let number;\n      if (referredToSegmentNumberSize === 1) {\n        number = data[position];\n      } else if (referredToSegmentNumberSize === 2) {\n        number = readUint16(data, position);\n      } else {\n        number = readUint32(data, position);\n      }\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = readUint32(data, position);\n      position += 4;\n    }\n    segmentHeader.length = readUint32(data, position);\n    position += 4;\n\n    if (segmentHeader.length === 0xffffffff) {\n      // 7.2.7 Segment data length, unknown segment length\n      if (segmentType === 38) {\n        // ImmediateGenericRegion\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags =\n          data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        // searching for the segment end\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xff;\n          searchPattern[1] = 0xac;\n        }\n        searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n        searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n        searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n        searchPattern[5] = genericRegionInfo.height & 0xff;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xffffffff) {\n          throw new Jbig2Error(\"segment end was not found\");\n        }\n      } else {\n        throw new Jbig2Error(\"invalid unknown segment length\");\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data,\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break; // end of file is found\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n\n  // 7.4.1 Region segment information field\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: readUint32(data, start),\n      height: readUint32(data, start + 4),\n      x: readUint32(data, start + 8),\n      y: readUint32(data, start + 12),\n      combinationOperator: data[start + 16] & 7,\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n\n    var data = segment.data,\n      position = segment.start,\n      end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0: // SymbolDictionary\n        // 7.4.2 Symbol dictionary segment syntax\n        var dictionary = {};\n        var dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n        dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n        dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n        dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = (dictionaryFlags >> 10) & 3;\n        dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1),\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1),\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = readUint32(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = readUint32(data, position);\n        position += 4;\n        args = [\n          dictionary,\n          header.number,\n          header.referredTo,\n          data,\n          position,\n          end,\n        ];\n        break;\n      case 6: // ImmediateTextRegion\n      case 7: // ImmediateLosslessTextRegion\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n        textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n        textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n        textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = readUint16(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n          textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n          textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n          textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n          textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n          textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(\n            textRegionHuffmanFlags & 0x4000\n          );\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1),\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = readUint32(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16: // PatternDictionary\n        // 7.4.4. Pattern dictionary segment syntax\n        const patternDictionary = {};\n        const patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = readUint32(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22: // ImmediateHalftoneRegion\n      case 23: // ImmediateLosslessHalftoneRegion\n        // 7.4.5 Halftone region segment syntax\n        const halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        const halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n        halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n        halftoneRegion.gridWidth = readUint32(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = readUint32(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n        position += 4;\n        halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n        position += 4;\n        halftoneRegion.gridVectorX = readUint16(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = readUint16(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38: // ImmediateGenericRegion\n      case 39: // ImmediateLosslessGenericRegion\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1),\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48: // PageInformation\n        var pageInfo = {\n          width: readUint32(data, position),\n          height: readUint32(data, position + 4),\n          resolutionX: readUint32(data, position + 8),\n          resolutionY: readUint32(data, position + 12),\n        };\n        if (pageInfo.height === 0xffffffff) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        readUint16(data, position + 17); // pageStripingInformation\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n        pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49: // EndOfPage\n        break;\n      case 50: // EndOfStripe\n        break;\n      case 51: // EndOfFile\n        break;\n      case 53: // Tables\n        args = [header.number, data, position, end];\n        break;\n      case 62: // 7.4.15 defines 2 extension types which\n        // are comments and can be ignored.\n        break;\n      default:\n        throw new Jbig2Error(\n          `segment type ${header.typeName}(${header.type})` +\n            \" is not implemented\"\n        );\n    }\n    var callbackName = \"on\" + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n\n  function parseJbig2(data) {\n    const end = data.length;\n    let position = 0;\n\n    if (\n      data[position] !== 0x97 ||\n      data[position + 1] !== 0x4a ||\n      data[position + 2] !== 0x42 ||\n      data[position + 3] !== 0x32 ||\n      data[position + 4] !== 0x0d ||\n      data[position + 5] !== 0x0a ||\n      data[position + 6] !== 0x1a ||\n      data[position + 7] !== 0x0a\n    ) {\n      throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n    }\n\n    const header = Object.create(null);\n    position += 8;\n    const flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n    }\n\n    const segments = readSegments(header, data, position, end);\n    const visitor = new SimpleSegmentVisitor();\n    processSegments(segments, visitor);\n\n    const { width, height } = visitor.currentPageInfo;\n    const bitPacked = visitor.buffer;\n    const imgData = new Uint8ClampedArray(width * height);\n    let q = 0,\n      k = 0;\n    for (let i = 0; i < height; i++) {\n      let mask = 0,\n        buffer;\n      for (let j = 0; j < width; j++) {\n        if (!mask) {\n          mask = 128;\n          buffer = bitPacked[k++];\n        }\n        imgData[q++] = buffer & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n\n    return { imgData, width, height };\n  }\n\n  function SimpleSegmentVisitor() {}\n\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = (info.width + 7) >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      // The contents of ArrayBuffers are initialized to 0.\n      // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xff;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n        height = regionInfo.height;\n      var rowSize = (pageInfo.width + 7) >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride\n        ? regionInfo.combinationOperator\n        : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0: // OR\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2: // XOR\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error(\n            `operator ${combinationOperator} is not supported`\n          );\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(\n      region,\n      data,\n      start,\n      end\n    ) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(\n        region.mmr,\n        regionInfo.width,\n        regionInfo.height,\n        region.template,\n        region.prediction,\n        null,\n        region.at,\n        decodingContext\n      );\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(\n      dictionary,\n      currentSegment,\n      referredSegments,\n      data,\n      start,\n      end\n    ) {\n      let huffmanTables, huffmanInput;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(\n          dictionary,\n          referredSegments,\n          this.customTables\n        );\n        huffmanInput = new Reader(data, start, end);\n      }\n\n      // Combines exported symbols from all referred segments\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        const referredSymbols = symbols[referredSegments[i]];\n        // referredSymbols is undefined when we have a reference to a Tables\n        // segment instead of a SymbolDictionary.\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(\n        dictionary.huffman,\n        dictionary.refinement,\n        inputSymbols,\n        dictionary.numberOfNewSymbols,\n        dictionary.numberOfExportedSymbols,\n        huffmanTables,\n        dictionary.template,\n        dictionary.at,\n        dictionary.refinementTemplate,\n        dictionary.refinementAt,\n        decodingContext,\n        huffmanInput\n      );\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(\n      region,\n      referredSegments,\n      data,\n      start,\n      end\n    ) {\n      var regionInfo = region.info;\n      let huffmanTables, huffmanInput;\n\n      // Combines exported symbols from all referred segments\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        const referredSymbols = symbols[referredSegments[i]];\n        // referredSymbols is undefined when we have a reference to a Tables\n        // segment instead of a SymbolDictionary.\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = log2(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(\n          region,\n          referredSegments,\n          this.customTables,\n          inputSymbols.length,\n          huffmanInput\n        );\n      }\n\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(\n        region.huffman,\n        region.refinement,\n        regionInfo.width,\n        regionInfo.height,\n        region.defaultPixelValue,\n        region.numberOfSymbolInstances,\n        region.stripSize,\n        inputSymbols,\n        symbolCodeLength,\n        region.transposed,\n        region.dsOffset,\n        region.referenceCorner,\n        region.combinationOperator,\n        huffmanTables,\n        region.refinementTemplate,\n        region.refinementAt,\n        decodingContext,\n        region.logStripSize,\n        huffmanInput\n      );\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      let patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      const decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(\n        dictionary.mmr,\n        dictionary.patternWidth,\n        dictionary.patternHeight,\n        dictionary.maxPatternIndex,\n        dictionary.template,\n        decodingContext\n      );\n    },\n    onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      // HalftoneRegion refers to exactly one PatternDictionary.\n      const patterns = this.patterns[referredSegments[0]];\n      const regionInfo = region.info;\n      const decodingContext = new DecodingContext(data, start, end);\n      const bitmap = decodeHalftoneRegion(\n        region.mmr,\n        patterns,\n        region.template,\n        regionInfo.width,\n        regionInfo.height,\n        region.defaultPixelValue,\n        region.enableSkip,\n        region.combinationOperator,\n        region.gridWidth,\n        region.gridHeight,\n        region.gridOffsetX,\n        region.gridOffsetY,\n        region.gridVectorX,\n        region.gridVectorY,\n        decodingContext\n      );\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables(currentSegment, data, start, end) {\n      let customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    },\n  };\n\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  HuffmanTreeNode.prototype = {\n    buildTree(line, shift) {\n      const bit = (line.prefixCode >> shift) & 1;\n      if (shift <= 0) {\n        // Create a leaf node.\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        // Create an intermediate node and continue recursively.\n        let node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        const htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      const node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error(\"invalid Huffman data\");\n      }\n      return node.decodeNode(reader);\n    },\n  };\n\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  HuffmanTable.prototype = {\n    decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes(lines) {\n      // Annex B.3 Assigning the prefix codes.\n      const linesLength = lines.length;\n      let prefixLengthMax = 0;\n      for (let i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n\n      const histogram = new Uint32Array(prefixLengthMax + 1);\n      for (let i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      let currentLength = 1,\n        firstCode = 0,\n        currentCode,\n        currentTemp,\n        line;\n      histogram[0] = 0;\n\n      while (currentLength <= prefixLengthMax) {\n        firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    },\n  };\n\n  function decodeTablesSegment(data, start, end) {\n    // Decodes a Tables segment, i.e., a custom Huffman table.\n    // Annex B.2 Code table structure.\n    const flags = data[start];\n    const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n    const highestValue = readUint32(data, start + 5) & 0xffffffff;\n    const reader = new Reader(data, start + 9, end);\n\n    const prefixSizeBits = ((flags >> 1) & 7) + 1;\n    const rangeSizeBits = ((flags >> 4) & 7) + 1;\n    const lines = [];\n    let prefixLength,\n      rangeLength,\n      currentRangeLow = lowestValue;\n\n    // Normal table lines\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(\n        new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n      );\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n\n    // Lower range table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(\n      new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"])\n    );\n\n    // Upper range table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n    if (flags & 1) {\n      // Out-of-band table line\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n\n    return new HuffmanTable(lines, false);\n  }\n\n  const standardTablesCache = {};\n\n  function getStandardTable(number) {\n    // Annex B.5 Standard Huffman tables.\n    let table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    let lines;\n    switch (number) {\n      case 1:\n        lines = [\n          [0, 1, 4, 0x0],\n          [16, 2, 8, 0x2],\n          [272, 3, 16, 0x6],\n          [65808, 3, 32, 0x7], // upper\n        ];\n        break;\n      case 2:\n        lines = [\n          [0, 1, 0, 0x0],\n          [1, 2, 0, 0x2],\n          [2, 3, 0, 0x6],\n          [3, 4, 3, 0xe],\n          [11, 5, 6, 0x1e],\n          [75, 6, 32, 0x3e], // upper\n          [6, 0x3f], // OOB\n        ];\n        break;\n      case 3:\n        lines = [\n          [-256, 8, 8, 0xfe],\n          [0, 1, 0, 0x0],\n          [1, 2, 0, 0x2],\n          [2, 3, 0, 0x6],\n          [3, 4, 3, 0xe],\n          [11, 5, 6, 0x1e],\n          [-257, 8, 32, 0xff, \"lower\"],\n          [75, 7, 32, 0x7e], // upper\n          [6, 0x3e], // OOB\n        ];\n        break;\n      case 4:\n        lines = [\n          [1, 1, 0, 0x0],\n          [2, 2, 0, 0x2],\n          [3, 3, 0, 0x6],\n          [4, 4, 3, 0xe],\n          [12, 5, 6, 0x1e],\n          [76, 5, 32, 0x1f], // upper\n        ];\n        break;\n      case 5:\n        lines = [\n          [-255, 7, 8, 0x7e],\n          [1, 1, 0, 0x0],\n          [2, 2, 0, 0x2],\n          [3, 3, 0, 0x6],\n          [4, 4, 3, 0xe],\n          [12, 5, 6, 0x1e],\n          [-256, 7, 32, 0x7f, \"lower\"],\n          [76, 6, 32, 0x3e], // upper\n        ];\n        break;\n      case 6:\n        lines = [\n          [-2048, 5, 10, 0x1c],\n          [-1024, 4, 9, 0x8],\n          [-512, 4, 8, 0x9],\n          [-256, 4, 7, 0xa],\n          [-128, 5, 6, 0x1d],\n          [-64, 5, 5, 0x1e],\n          [-32, 4, 5, 0xb],\n          [0, 2, 7, 0x0],\n          [128, 3, 7, 0x2],\n          [256, 3, 8, 0x3],\n          [512, 4, 9, 0xc],\n          [1024, 4, 10, 0xd],\n          [-2049, 6, 32, 0x3e, \"lower\"],\n          [2048, 6, 32, 0x3f], // upper\n        ];\n        break;\n      case 7:\n        lines = [\n          [-1024, 4, 9, 0x8],\n          [-512, 3, 8, 0x0],\n          [-256, 4, 7, 0x9],\n          [-128, 5, 6, 0x1a],\n          [-64, 5, 5, 0x1b],\n          [-32, 4, 5, 0xa],\n          [0, 4, 5, 0xb],\n          [32, 5, 5, 0x1c],\n          [64, 5, 6, 0x1d],\n          [128, 4, 7, 0xc],\n          [256, 3, 8, 0x1],\n          [512, 3, 9, 0x2],\n          [1024, 3, 10, 0x3],\n          [-1025, 5, 32, 0x1e, \"lower\"],\n          [2048, 5, 32, 0x1f], // upper\n        ];\n        break;\n      case 8:\n        lines = [\n          [-15, 8, 3, 0xfc],\n          [-7, 9, 1, 0x1fc],\n          [-5, 8, 1, 0xfd],\n          [-3, 9, 0, 0x1fd],\n          [-2, 7, 0, 0x7c],\n          [-1, 4, 0, 0xa],\n          [0, 2, 1, 0x0],\n          [2, 5, 0, 0x1a],\n          [3, 6, 0, 0x3a],\n          [4, 3, 4, 0x4],\n          [20, 6, 1, 0x3b],\n          [22, 4, 4, 0xb],\n          [38, 4, 5, 0xc],\n          [70, 5, 6, 0x1b],\n          [134, 5, 7, 0x1c],\n          [262, 6, 7, 0x3c],\n          [390, 7, 8, 0x7d],\n          [646, 6, 10, 0x3d],\n          [-16, 9, 32, 0x1fe, \"lower\"],\n          [1670, 9, 32, 0x1ff], // upper\n          [2, 0x1], // OOB\n        ];\n        break;\n      case 9:\n        lines = [\n          [-31, 8, 4, 0xfc],\n          [-15, 9, 2, 0x1fc],\n          [-11, 8, 2, 0xfd],\n          [-7, 9, 1, 0x1fd],\n          [-5, 7, 1, 0x7c],\n          [-3, 4, 1, 0xa],\n          [-1, 3, 1, 0x2],\n          [1, 3, 1, 0x3],\n          [3, 5, 1, 0x1a],\n          [5, 6, 1, 0x3a],\n          [7, 3, 5, 0x4],\n          [39, 6, 2, 0x3b],\n          [43, 4, 5, 0xb],\n          [75, 4, 6, 0xc],\n          [139, 5, 7, 0x1b],\n          [267, 5, 8, 0x1c],\n          [523, 6, 8, 0x3c],\n          [779, 7, 9, 0x7d],\n          [1291, 6, 11, 0x3d],\n          [-32, 9, 32, 0x1fe, \"lower\"],\n          [3339, 9, 32, 0x1ff], // upper\n          [2, 0x0], // OOB\n        ];\n        break;\n      case 10:\n        lines = [\n          [-21, 7, 4, 0x7a],\n          [-5, 8, 0, 0xfc],\n          [-4, 7, 0, 0x7b],\n          [-3, 5, 0, 0x18],\n          [-2, 2, 2, 0x0],\n          [2, 5, 0, 0x19],\n          [3, 6, 0, 0x36],\n          [4, 7, 0, 0x7c],\n          [5, 8, 0, 0xfd],\n          [6, 2, 6, 0x1],\n          [70, 5, 5, 0x1a],\n          [102, 6, 5, 0x37],\n          [134, 6, 6, 0x38],\n          [198, 6, 7, 0x39],\n          [326, 6, 8, 0x3a],\n          [582, 6, 9, 0x3b],\n          [1094, 6, 10, 0x3c],\n          [2118, 7, 11, 0x7d],\n          [-22, 8, 32, 0xfe, \"lower\"],\n          [4166, 8, 32, 0xff], // upper\n          [2, 0x2], // OOB\n        ];\n        break;\n      case 11:\n        lines = [\n          [1, 1, 0, 0x0],\n          [2, 2, 1, 0x2],\n          [4, 4, 0, 0xc],\n          [5, 4, 1, 0xd],\n          [7, 5, 1, 0x1c],\n          [9, 5, 2, 0x1d],\n          [13, 6, 2, 0x3c],\n          [17, 7, 2, 0x7a],\n          [21, 7, 3, 0x7b],\n          [29, 7, 4, 0x7c],\n          [45, 7, 5, 0x7d],\n          [77, 7, 6, 0x7e],\n          [141, 7, 32, 0x7f], // upper\n        ];\n        break;\n      case 12:\n        lines = [\n          [1, 1, 0, 0x0],\n          [2, 2, 0, 0x2],\n          [3, 3, 1, 0x6],\n          [5, 5, 0, 0x1c],\n          [6, 5, 1, 0x1d],\n          [8, 6, 1, 0x3c],\n          [10, 7, 0, 0x7a],\n          [11, 7, 1, 0x7b],\n          [13, 7, 2, 0x7c],\n          [17, 7, 3, 0x7d],\n          [25, 7, 4, 0x7e],\n          [41, 8, 5, 0xfe],\n          [73, 8, 32, 0xff], // upper\n        ];\n        break;\n      case 13:\n        lines = [\n          [1, 1, 0, 0x0],\n          [2, 3, 0, 0x4],\n          [3, 4, 0, 0xc],\n          [4, 5, 0, 0x1c],\n          [5, 4, 1, 0xd],\n          [7, 3, 3, 0x5],\n          [15, 6, 1, 0x3a],\n          [17, 6, 2, 0x3b],\n          [21, 6, 3, 0x3c],\n          [29, 6, 4, 0x3d],\n          [45, 6, 5, 0x3e],\n          [77, 7, 6, 0x7e],\n          [141, 7, 32, 0x7f], // upper\n        ];\n        break;\n      case 14:\n        lines = [\n          [-2, 3, 0, 0x4],\n          [-1, 3, 0, 0x5],\n          [0, 1, 0, 0x0],\n          [1, 3, 0, 0x6],\n          [2, 3, 0, 0x7],\n        ];\n        break;\n      case 15:\n        lines = [\n          [-24, 7, 4, 0x7c],\n          [-8, 6, 2, 0x3c],\n          [-4, 5, 1, 0x1c],\n          [-2, 4, 0, 0xc],\n          [-1, 3, 0, 0x4],\n          [0, 1, 0, 0x0],\n          [1, 3, 0, 0x5],\n          [2, 4, 0, 0xd],\n          [3, 5, 1, 0x1d],\n          [5, 6, 2, 0x3d],\n          [9, 7, 4, 0x7d],\n          [-25, 7, 32, 0x7e, \"lower\"],\n          [25, 7, 32, 0x7f], // upper\n        ];\n        break;\n      default:\n        throw new Jbig2Error(`standard table B.${number} does not exist`);\n    }\n\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  Reader.prototype = {\n    readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error(\"end of data while reading bit\");\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      const bit = (this.currentByte >> this.shift) & 1;\n      this.shift--;\n      return bit;\n    },\n\n    readBits(numBits) {\n      let result = 0,\n        i;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n\n    byteAlign() {\n      this.shift = -1;\n    },\n\n    next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    },\n  };\n\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    // Returns a Tables segment that has been earlier decoded.\n    // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n    let currentIndex = 0;\n    for (let i = 0, ii = referredTo.length; i < ii; i++) {\n      const table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error(\"can't find custom Huffman table\");\n  }\n\n  function getTextRegionHuffmanTables(\n    textRegion,\n    referredTo,\n    customTables,\n    numberOfSymbols,\n    reader\n  ) {\n    // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n    // Read code lengths for RUNCODEs 0...34.\n    const codes = [];\n    for (let i = 0; i <= 34; i++) {\n      const codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    // Assign Huffman codes for RUNCODEs.\n    const runCodesTable = new HuffmanTable(codes, false);\n\n    // Read a Huffman code using the assignment above.\n    // Interpret the RUNCODE codes and the additional bits (if any).\n    codes.length = 0;\n    for (let i = 0; i < numberOfSymbols; ) {\n      const codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        let repeatedLength, numberOfRepeats, j;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error(\"no previous value in symbol ID table\");\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error(\"invalid code length in symbol ID table\");\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    const symbolIDTable = new HuffmanTable(codes, false);\n\n    // 7.4.3.1.6 Text region segment Huffman table selection\n\n    let customIndex = 0,\n      tableFirstS,\n      tableDeltaS,\n      tableDeltaT;\n\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(\n          customIndex,\n          referredTo,\n          customTables\n        );\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error(\"invalid Huffman FS selector\");\n    }\n\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(\n          customIndex,\n          referredTo,\n          customTables\n        );\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error(\"invalid Huffman DS selector\");\n    }\n\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(\n          customIndex,\n          referredTo,\n          customTables\n        );\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error(\"invalid Huffman DT selector\");\n    }\n\n    if (textRegion.refinement) {\n      // Load tables RDW, RDH, RDX and RDY.\n      throw new Jbig2Error(\"refinement with Huffman is not supported\");\n    }\n\n    return {\n      symbolIDTable,\n      tableFirstS,\n      tableDeltaS,\n      tableDeltaT,\n    };\n  }\n\n  function getSymbolDictionaryHuffmanTables(\n    dictionary,\n    referredTo,\n    customTables\n  ) {\n    // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n    let customIndex = 0,\n      tableDeltaHeight,\n      tableDeltaWidth;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(\n          customIndex,\n          referredTo,\n          customTables\n        );\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error(\"invalid Huffman DH selector\");\n    }\n\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(\n          customIndex,\n          referredTo,\n          customTables\n        );\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error(\"invalid Huffman DW selector\");\n    }\n\n    let tableBitmapSize, tableAggregateInstances;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n\n    return {\n      tableDeltaHeight,\n      tableDeltaWidth,\n      tableBitmapSize,\n      tableAggregateInstances,\n    };\n  }\n\n  function readUncompressedBitmap(reader, width, height) {\n    const bitmap = [];\n    for (let y = 0; y < height; y++) {\n      const row = new Uint8Array(width);\n      bitmap.push(row);\n      for (let x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    // MMR is the same compression algorithm as the PDF filter\n    // CCITTFaxDecode with /K -1.\n    const params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock,\n    };\n    const decoder = new CCITTFaxDecoder(input, params);\n    const bitmap = [];\n    let currentByte,\n      eof = false;\n\n    for (let y = 0; y < height; y++) {\n      const row = new Uint8Array(width);\n      bitmap.push(row);\n      let shift = -1;\n      for (let x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            // Set the rest of the bits to zero.\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = (currentByte >> shift) & 1;\n        shift--;\n      }\n    }\n\n    if (endOfBlock && !eof) {\n      // Read until EOFB has been consumed.\n      const lookForEOFLimit = 5;\n      for (let i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n\n    return bitmap;\n  }\n\n  // eslint-disable-next-line no-shadow\n  function Jbig2Image() {}\n\n  Jbig2Image.prototype = {\n    parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    },\n\n    parse(data) {\n      const { imgData, width, height } = parseJbig2(data);\n      this.width = width;\n      this.height = height;\n      return imgData;\n    },\n  };\n\n  return Jbig2Image;\n})();\n\nexport { Jbig2Image };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`);\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass XRefEntryException extends BaseException {}\n\nclass XRefParseException extends BaseException {}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned. To avoid infinite loops, the traversal is stopped when\n * the loop limit is reached.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  const LOOP_LIMIT = 100;\n  let loopCount = 0;\n  let values;\n\n  while (dict) {\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn(`getInheritableProperty: maximum loop count exceeded for \"${key}\"`);\n      break;\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n  const romanBuf = [];\n  let pos;\n  // Thousands\n  while (number >= 1000) {\n    number -= 1000;\n    romanBuf.push(\"M\");\n  }\n  // Hundreds\n  pos = (number / 100) | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  // Tens\n  pos = (number / 10) | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  // Ones\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n\n  const romanStr = romanBuf.join(\"\");\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\nexport {\n  getLookupTableFactory,\n  MissingDataException,\n  XRefEntryException,\n  XRefParseException,\n  getInheritableProperty,\n  toRomanNumerals,\n  log2,\n  readInt8,\n  readUint16,\n  readUint32,\n  isWhiteSpace,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nimport { info } from \"../shared/util.js\";\n\nconst CCITTFaxDecoder = (function CCITTFaxDecoder() {\n  const ccittEOL = -2;\n  const ccittEOF = -1;\n  const twoDimPass = 0;\n  const twoDimHoriz = 1;\n  const twoDimVert0 = 2;\n  const twoDimVertR1 = 3;\n  const twoDimVertL1 = 4;\n  const twoDimVertR2 = 5;\n  const twoDimVertL2 = 6;\n  const twoDimVertR3 = 7;\n  const twoDimVertL3 = 8;\n\n  // prettier-ignore\n  const twoDimTable = [\n    [-1, -1], [-1, -1],                   // 000000x\n    [7, twoDimVertL3],                    // 0000010\n    [7, twoDimVertR3],                    // 0000011\n    [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n    [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n    [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n    [4, twoDimPass], [4, twoDimPass],\n    [4, twoDimPass], [4, twoDimPass],\n    [4, twoDimPass], [4, twoDimPass],\n    [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0]\n  ];\n\n  // prettier-ignore\n  const whiteTable1 = [\n    [-1, -1],                               // 00000\n    [12, ccittEOL],                         // 00001\n    [-1, -1], [-1, -1],                     // 0001x\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n    [11, 1792], [11, 1792],                 // 1000x\n    [12, 1984],                             // 10010\n    [12, 2048],                             // 10011\n    [12, 2112],                             // 10100\n    [12, 2176],                             // 10101\n    [12, 2240],                             // 10110\n    [12, 2304],                             // 10111\n    [11, 1856], [11, 1856],                 // 1100x\n    [11, 1920], [11, 1920],                 // 1101x\n    [12, 2368],                             // 11100\n    [12, 2432],                             // 11101\n    [12, 2496],                             // 11110\n    [12, 2560]                              // 11111\n  ];\n\n  // prettier-ignore\n  const whiteTable2 = [\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n    [8, 29], [8, 29],                           // 00000010x\n    [8, 30], [8, 30],                           // 00000011x\n    [8, 45], [8, 45],                           // 00000100x\n    [8, 46], [8, 46],                           // 00000101x\n    [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n    [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n    [8, 47], [8, 47],                           // 00001010x\n    [8, 48], [8, 48],                           // 00001011x\n    [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n    [6, 13], [6, 13], [6, 13], [6, 13],\n    [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n    [8, 33], [8, 33],                           // 00010010x\n    [8, 34], [8, 34],                           // 00010011x\n    [8, 35], [8, 35],                           // 00010100x\n    [8, 36], [8, 36],                           // 00010101x\n    [8, 37], [8, 37],                           // 00010110x\n    [8, 38], [8, 38],                           // 00010111x\n    [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n    [8, 31], [8, 31],                           // 00011010x\n    [8, 32], [8, 32],                           // 00011011x\n    [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n    [6, 1], [6, 1], [6, 1], [6, 1],\n    [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n    [6, 12], [6, 12], [6, 12], [6, 12],\n    [8, 53], [8, 53],                           // 00100100x\n    [8, 54], [8, 54],                           // 00100101x\n    [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n    [8, 39], [8, 39],                           // 00101000x\n    [8, 40], [8, 40],                           // 00101001x\n    [8, 41], [8, 41],                           // 00101010x\n    [8, 42], [8, 42],                           // 00101011x\n    [8, 43], [8, 43],                           // 00101100x\n    [8, 44], [8, 44],                           // 00101101x\n    [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n    [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n    [8, 61], [8, 61],                           // 00110010x\n    [8, 62], [8, 62],                           // 00110011x\n    [8, 63], [8, 63],                           // 00110100x\n    [8, 0], [8, 0],                             // 00110101x\n    [8, 320], [8, 320],                         // 00110110x\n    [8, 384], [8, 384],                         // 00110111x\n    [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n    [8, 59], [8, 59],                           // 01001010x\n    [8, 60], [8, 60],                           // 01001011x\n    [9, 1472],                                  // 010011000\n    [9, 1536],                                  // 010011001\n    [9, 1600],                                  // 010011010\n    [9, 1728],                                  // 010011011\n    [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n    [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n    [8, 49], [8, 49],                           // 01010010x\n    [8, 50], [8, 50],                           // 01010011x\n    [8, 51], [8, 51],                           // 01010100x\n    [8, 52], [8, 52],                           // 01010101x\n    [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n    [8, 55], [8, 55],                           // 01011000x\n    [8, 56], [8, 56],                           // 01011001x\n    [8, 57], [8, 57],                           // 01011010x\n    [8, 58], [8, 58],                           // 01011011x\n    [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n    [6, 192], [6, 192], [6, 192], [6, 192],\n    [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n    [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n    [8, 448], [8, 448],                         // 01100100x\n    [8, 512], [8, 512],                         // 01100101x\n    [9, 704],                                   // 011001100\n    [9, 768],                                   // 011001101\n    [8, 640], [8, 640],                         // 01100111x\n    [8, 576], [8, 576],                         // 01101000x\n    [9, 832],                                   // 011010010\n    [9, 896],                                   // 011010011\n    [9, 960],                                   // 011010100\n    [9, 1024],                                  // 011010101\n    [9, 1088],                                  // 011010110\n    [9, 1152],                                  // 011010111\n    [9, 1216],                                  // 011011000\n    [9, 1280],                                  // 011011001\n    [9, 1344],                                  // 011011010\n    [9, 1408],                                  // 011011011\n    [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n    [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n    [6, 16], [6, 16], [6, 16], [6, 16],\n    [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n    [6, 17], [6, 17], [6, 17], [6, 17],\n    [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n    [6, 14], [6, 14], [6, 14], [6, 14],\n    [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n    [6, 15], [6, 15], [6, 15], [6, 15],\n    [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7]\n  ];\n\n  // prettier-ignore\n  const blackTable1 = [\n    [-1, -1], [-1, -1],                             // 000000000000x\n    [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n    [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n    [12, 1984], [12, 1984],                         // 000000010010x\n    [12, 2048], [12, 2048],                         // 000000010011x\n    [12, 2112], [12, 2112],                         // 000000010100x\n    [12, 2176], [12, 2176],                         // 000000010101x\n    [12, 2240], [12, 2240],                         // 000000010110x\n    [12, 2304], [12, 2304],                         // 000000010111x\n    [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n    [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n    [12, 2368], [12, 2368],                         // 000000011100x\n    [12, 2432], [12, 2432],                         // 000000011101x\n    [12, 2496], [12, 2496],                         // 000000011110x\n    [12, 2560], [12, 2560],                         // 000000011111x\n    [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n    [10, 18], [10, 18], [10, 18], [10, 18],\n    [12, 52], [12, 52],                             // 000000100100x\n    [13, 640],                                      // 0000001001010\n    [13, 704],                                      // 0000001001011\n    [13, 768],                                      // 0000001001100\n    [13, 832],                                      // 0000001001101\n    [12, 55], [12, 55],                             // 000000100111x\n    [12, 56], [12, 56],                             // 000000101000x\n    [13, 1280],                                     // 0000001010010\n    [13, 1344],                                     // 0000001010011\n    [13, 1408],                                     // 0000001010100\n    [13, 1472],                                     // 0000001010101\n    [12, 59], [12, 59],                             // 000000101011x\n    [12, 60], [12, 60],                             // 000000101100x\n    [13, 1536],                                     // 0000001011010\n    [13, 1600],                                     // 0000001011011\n    [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n    [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n    [13, 1664],                                     // 0000001100100\n    [13, 1728],                                     // 0000001100101\n    [12, 320], [12, 320],                           // 000000110011x\n    [12, 384], [12, 384],                           // 000000110100x\n    [12, 448], [12, 448],                           // 000000110101x\n    [13, 512],                                      // 0000001101100\n    [13, 576],                                      // 0000001101101\n    [12, 53], [12, 53],                             // 000000110111x\n    [12, 54], [12, 54],                             // 000000111000x\n    [13, 896],                                      // 0000001110010\n    [13, 960],                                      // 0000001110011\n    [13, 1024],                                     // 0000001110100\n    [13, 1088],                                     // 0000001110101\n    [13, 1152],                                     // 0000001110110\n    [13, 1216],                                     // 0000001110111\n    [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n    [10, 64], [10, 64], [10, 64], [10, 64]\n  ];\n\n  // prettier-ignore\n  const blackTable2 = [\n    [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [11, 23], [11, 23],                     // 00000101000x\n    [12, 50],                               // 000001010010\n    [12, 51],                               // 000001010011\n    [12, 44],                               // 000001010100\n    [12, 45],                               // 000001010101\n    [12, 46],                               // 000001010110\n    [12, 47],                               // 000001010111\n    [12, 57],                               // 000001011000\n    [12, 58],                               // 000001011001\n    [12, 61],                               // 000001011010\n    [12, 256],                              // 000001011011\n    [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n    [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n    [12, 48],                               // 000001100100\n    [12, 49],                               // 000001100101\n    [12, 62],                               // 000001100110\n    [12, 63],                               // 000001100111\n    [12, 30],                               // 000001101000\n    [12, 31],                               // 000001101001\n    [12, 32],                               // 000001101010\n    [12, 33],                               // 000001101011\n    [12, 40],                               // 000001101100\n    [12, 41],                               // 000001101101\n    [11, 22], [11, 22],                     // 00000110111x\n    [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n    [9, 15], [9, 15], [9, 15], [9, 15],\n    [12, 128],                              // 000011001000\n    [12, 192],                              // 000011001001\n    [12, 26],                               // 000011001010\n    [12, 27],                               // 000011001011\n    [12, 28],                               // 000011001100\n    [12, 29],                               // 000011001101\n    [11, 19], [11, 19],                     // 00001100111x\n    [11, 20], [11, 20],                     // 00001101000x\n    [12, 34],                               // 000011010010\n    [12, 35],                               // 000011010011\n    [12, 36],                               // 000011010100\n    [12, 37],                               // 000011010101\n    [12, 38],                               // 000011010110\n    [12, 39],                               // 000011010111\n    [11, 21], [11, 21],                     // 00001101100x\n    [12, 42],                               // 000011011010\n    [12, 43],                               // 000011011011\n    [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n    [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12]\n  ];\n\n  // prettier-ignore\n  const blackTable3 = [\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n    [6, 9],                                 // 000100\n    [6, 8],                                 // 000101\n    [5, 7], [5, 7],                         // 00011x\n    [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n    [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n    [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n    [3, 1], [3, 1], [3, 1], [3, 1],\n    [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n    [3, 4], [3, 4], [3, 4], [3, 4],\n    [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n    [2, 2], [2, 2], [2, 2], [2, 2],\n    [2, 2], [2, 2], [2, 2], [2, 2],\n    [2, 2], [2, 2], [2, 2], [2, 2]\n  ];\n\n  /**\n   * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n   * @param {Object} [options] - Decoding options.\n   */\n  // eslint-disable-next-line no-shadow\n  function CCITTFaxDecoder(source, options = {}) {\n    if (!source || typeof source.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    let eoblock = options.EndOfBlock;\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  CCITTFaxDecoder.prototype = {\n    readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      const refLine = this.refLine;\n      const codingLine = this.codingLine;\n      const columns = this.columns;\n\n      let refPos, blackPixels, bits, i;\n\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n\n        let code1, code2, code3;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(\n                  codingLine[this.codingPos] + code1,\n                  blackPixels\n                );\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(\n                    codingLine[this.codingPos] + code2,\n                    blackPixels ^ 1\n                  );\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (\n                    refLine[refPos] <= codingLine[this.codingPos] &&\n                    refLine[refPos] < columns\n                  ) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                info(\"bad 2d code\");\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n\n        let gotEOL = false;\n\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  info(\"bad rtc code: \" + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[(this.codingPos = 0)];\n        } else {\n          this.outputBits = codingLine[(this.codingPos = 1)];\n        }\n        this.row++;\n      }\n\n      let c;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xff;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits =\n            codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xff >> (8 - bits);\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xff >> (8 - this.outputBits);\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits =\n                codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xff;\n      }\n      return c;\n    },\n\n    /**\n     * @private\n     */\n    _addPixels(a1, blackPixels) {\n      const codingLine = this.codingLine;\n      let codingPos = this.codingPos;\n\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          info(\"row is wrong length\");\n          this.err = true;\n          a1 = this.columns;\n        }\n        if ((codingPos & 1) ^ blackPixels) {\n          ++codingPos;\n        }\n\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n\n    /**\n     * @private\n     */\n    _addPixelsNeg(a1, blackPixels) {\n      const codingLine = this.codingLine;\n      let codingPos = this.codingPos;\n\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          info(\"row is wrong length\");\n          this.err = true;\n          a1 = this.columns;\n        }\n        if ((codingPos & 1) ^ blackPixels) {\n          ++codingPos;\n        }\n\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          info(\"invalid code\");\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n\n      this.codingPos = codingPos;\n    },\n\n    /**\n     * This function returns the code found from the table.\n     * The start and end parameters set the boundaries for searching the table.\n     * The limit parameter is optional. Function returns an array with three\n     * values. The first array element indicates whether a valid code is being\n     * returned. The second array element is the actual code. The third array\n     * element indicates whether EOF was reached.\n     * @private\n     */\n    _findTableCode(start, end, table, limit) {\n      const limitValue = limit || 0;\n      for (let i = start; i <= end; ++i) {\n        let code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          const p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n\n    /**\n     * @private\n     */\n    _getTwoDimCode() {\n      let code = 0;\n      let p;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        const result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      info(\"Bad two dim code\");\n      return ccittEOF;\n    },\n\n    /**\n     * @private\n     */\n    _getWhiteCode() {\n      let code = 0;\n      let p;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        let result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      info(\"bad white code\");\n      this._eatBits(1);\n      return 1;\n    },\n\n    /**\n     * @private\n     */\n    _getBlackCode() {\n      let code, p;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        let result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      info(\"bad black code\");\n      this._eatBits(1);\n      return 1;\n    },\n\n    /**\n     * @private\n     */\n    _lookBits(n) {\n      let c;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n        }\n        this.inputBuf = (this.inputBuf << 8) | c;\n        this.inputBits += 8;\n      }\n      return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n    },\n\n    /**\n     * @private\n     */\n    _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    },\n  };\n\n  return CCITTFaxDecoder;\n})();\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(`JPEG error: ${msg}`);\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message);\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\nvar JpegImage = (function JpegImageClosure() {\n  // prettier-ignore\n  var dctZigZag = new Uint8Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1 = 4017; // cos(pi/16)\n  var dctSin1 = 799; // sin(pi/16)\n  var dctCos3 = 3406; // cos(3*pi/16)\n  var dctSin3 = 2276; // sin(3*pi/16)\n  var dctCos6 = 1567; // cos(6*pi/16)\n  var dctSin6 = 3784; // sin(6*pi/16)\n  var dctSqrt2 = 5793; // sqrt(2)\n  var dctSqrt1d2 = 2896; // sqrt(2) / 2\n\n  // eslint-disable-next-line no-shadow\n  function JpegImage({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n      code = [],\n      i,\n      j,\n      length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({ children: [], index: 0 });\n    var p = code[0],\n      q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push((q = { children: [], index: 0 }));\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n\n  function decodeScan(\n    data,\n    offset,\n    frame,\n    components,\n    resetInterval,\n    spectralStart,\n    spectralEnd,\n    successivePrev,\n    successive,\n    parseDNLMarker = false\n  ) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n\n    const startOffset = offset;\n    let bitsData = 0,\n      bitsCount = 0;\n\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xff) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n            offset += 2; // Skip marker length.\n\n            const scanLines = readUint16(data, offset);\n            offset += 2;\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError(\n                \"Found DNL marker (0xFFDC) while parsing scan data\",\n                scanLines\n              );\n            }\n          } else if (nextByte === /* EOI = */ 0xd9) {\n            if (parseDNLMarker) {\n              // NOTE: only 8-bit JPEG images are supported in this decoder.\n              const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n              // Heuristic to attempt to handle corrupt JPEG images with too\n              // large `scanLines` parameter, by falling back to the currently\n              // parsed number of scanLines when it's at least (approximately)\n              // one order of magnitude smaller than expected (fixes\n              // issue10880.pdf and issue10989.pdf).\n              if (\n                maybeScanLines > 0 &&\n                Math.round(frame.scanLines / maybeScanLines) >= 10\n              ) {\n                throw new DNLMarkerError(\n                  \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                    \"possibly caused by incorrect `scanLines` parameter\",\n                  maybeScanLines\n                );\n              }\n            }\n            throw new EOIMarkerError(\n              \"Found EOI marker (0xFFD9) while parsing scan data\"\n            );\n          }\n          throw new JpegError(\n            `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n          );\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        switch (typeof node) {\n          case \"number\":\n            return node;\n          case \"object\":\n            continue;\n        }\n        throw new JpegError(\"invalid huffman sequence\");\n      }\n    }\n\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = (n << 1) | readBit();\n        length--;\n      }\n      return n;\n    }\n\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << (length - 1)) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n\n    function decodeBaseline(component, blockOffset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[blockOffset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n          r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[blockOffset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n\n    function decodeDCFirst(component, blockOffset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[blockOffset] = component.pred += diff;\n    }\n\n    function decodeDCSuccessive(component, blockOffset) {\n      component.blockData[blockOffset] |= readBit() << successive;\n    }\n\n    var eobrun = 0;\n    function decodeACFirst(component, blockOffset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n        e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n          r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[blockOffset + z] =\n          receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n\n    var successiveACState = 0,\n      successiveACNextValue;\n    function decodeACSuccessive(component, blockOffset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        const offsetZ = blockOffset + dctZigZag[k];\n        const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0: // initial state\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError(\"invalid ACn encoding\");\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1: // skipping r zero items\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3: // set value for a zero item\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] =\n                successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4: // eob\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n\n    let blockRow = 0;\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, blockOffset);\n    }\n\n    function decodeBlock(component, decode, mcu) {\n      blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, blockOffset);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0,\n      fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n\n    var h, v;\n    while (mcu <= mcuExpected) {\n      // reset interval stuff\n      var mcuToRead = resetInterval\n        ? Math.min(mcuExpected - mcu, resetInterval)\n        : mcuExpected;\n\n      // The `mcuToRead === 0` case should only occur when all of the expected\n      // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n      // some corrupt JPEG images contain more data than intended and we thus\n      // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n      if (mcuToRead > 0) {\n        for (i = 0; i < componentsLength; i++) {\n          components[i].pred = 0;\n        }\n        eobrun = 0;\n\n        if (componentsLength === 1) {\n          component = components[0];\n          for (n = 0; n < mcuToRead; n++) {\n            decodeBlock(component, decodeFn, mcu);\n            mcu++;\n          }\n        } else {\n          for (n = 0; n < mcuToRead; n++) {\n            for (i = 0; i < componentsLength; i++) {\n              component = components[i];\n              h = component.h;\n              v = component.v;\n              for (j = 0; j < v; j++) {\n                for (k = 0; k < h; k++) {\n                  decodeMcu(component, decodeFn, mcu, j, k);\n                }\n              }\n            }\n            mcu++;\n          }\n        }\n      }\n\n      // find marker\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (!fileMarker) {\n        break; // Reached the end of the image data without finding any marker.\n      }\n      if (fileMarker.invalid) {\n        // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n        // past those to attempt to find a valid marker (fixes issue4090.pdf).\n        const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n        warn(\n          `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n        );\n        offset = fileMarker.offset;\n      }\n      if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n        // RSTx\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n\n    return offset - startOffset;\n  }\n\n  // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n      blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n\n    if (!qt) {\n      throw new JpegError(\"missing required Quantization Table.\");\n    }\n\n    // inverse DCT on rows\n    for (var row = 0; row < 64; row += 8) {\n      // gather block data\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n\n      // dequant p0\n      p0 *= qt[row];\n\n      // check for all-zero AC coefficients\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = (dctSqrt2 * p0 + 512) >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      // dequant p1 ... p7\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n\n      // stage 4\n      v0 = (dctSqrt2 * p0 + 128) >> 8;\n      v1 = (dctSqrt2 * p4 + 128) >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n      v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n\n      // stage 3\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = v0 - v1;\n      t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n      v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n      v3 = t;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = v4 - v6;\n      v7 = (v7 + v5 + 1) >> 1;\n      v5 = v7 - v5;\n\n      // stage 2\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = v0 - v3;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = v1 - v2;\n      t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n      v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n      v7 = t;\n      t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n      v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n\n    // inverse DCT on columns\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n\n      // check for all-zero AC coefficients\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = (dctSqrt2 * p0 + 8192) >> 14;\n        // Convert to 8-bit.\n        if (t < -2040) {\n          t = 0;\n        } else if (t >= 2024) {\n          t = 255;\n        } else {\n          t = (t + 2056) >> 4;\n        }\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n\n      // stage 4\n      v0 = (dctSqrt2 * p0 + 2048) >> 12;\n      v1 = (dctSqrt2 * p4 + 2048) >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n      v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n      v5 = p3;\n      v6 = p5;\n\n      // stage 3\n      // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n      // converting to UInt8 range later.\n      v0 = ((v0 + v1 + 1) >> 1) + 4112;\n      v1 = v0 - v1;\n      t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n      v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n      v3 = t;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = v4 - v6;\n      v7 = (v7 + v5 + 1) >> 1;\n      v5 = v7 - v5;\n\n      // stage 2\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = v0 - v3;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = v1 - v2;\n      t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n      v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n      v7 = t;\n      t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n      v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n\n      // Convert to 8-bit integers.\n      if (p0 < 16) {\n        p0 = 0;\n      } else if (p0 >= 4080) {\n        p0 = 255;\n      } else {\n        p0 >>= 4;\n      }\n      if (p1 < 16) {\n        p1 = 0;\n      } else if (p1 >= 4080) {\n        p1 = 255;\n      } else {\n        p1 >>= 4;\n      }\n      if (p2 < 16) {\n        p2 = 0;\n      } else if (p2 >= 4080) {\n        p2 = 255;\n      } else {\n        p2 >>= 4;\n      }\n      if (p3 < 16) {\n        p3 = 0;\n      } else if (p3 >= 4080) {\n        p3 = 255;\n      } else {\n        p3 >>= 4;\n      }\n      if (p4 < 16) {\n        p4 = 0;\n      } else if (p4 >= 4080) {\n        p4 = 255;\n      } else {\n        p4 >>= 4;\n      }\n      if (p5 < 16) {\n        p5 = 0;\n      } else if (p5 >= 4080) {\n        p5 = 255;\n      } else {\n        p5 >>= 4;\n      }\n      if (p6 < 16) {\n        p6 = 0;\n      } else if (p6 >= 4080) {\n        p6 = 255;\n      } else {\n        p6 >>= 4;\n      }\n      if (p7 < 16) {\n        p7 = 0;\n      } else if (p7 >= 4080) {\n        p7 = 255;\n      } else {\n        p7 >>= 4;\n      }\n\n      // store block data\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n\n  function findNextFileMarker(data, currentPos, startPos = currentPos) {\n    const maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n\n    if (currentPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    var currentMarker = readUint16(data, currentPos);\n    if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos,\n      };\n    }\n    var newMarker = readUint16(data, newPos);\n    while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n      if (++newPos >= maxPos) {\n        return null; // Don't attempt to read non-existent data and just return.\n      }\n      newMarker = readUint16(data, newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos,\n    };\n  }\n\n  JpegImage.prototype = {\n    parse(data, { dnlScanLines = null } = {}) {\n      function readDataBlock() {\n        const length = readUint16(data, offset);\n        offset += 2;\n        let endOffset = offset + length - 2;\n\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          warn(\n            \"readDataBlock - incorrect length, current marker is: \" +\n              fileMarker.invalid\n          );\n          endOffset = fileMarker.offset;\n        }\n\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(\n            (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n          );\n          var blocksPerColumn = Math.ceil(\n            (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n          );\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n          var blocksBufferSize =\n            64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      let numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n        huffmanTablesDC = [];\n\n      let fileMarker = readUint16(data, offset);\n      offset += 2;\n      if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n        throw new JpegError(\"SOI not found\");\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n\n      markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xffe0: // APP0 (Application Specific)\n          case 0xffe1: // APP1\n          case 0xffe2: // APP2\n          case 0xffe3: // APP3\n          case 0xffe4: // APP4\n          case 0xffe5: // APP5\n          case 0xffe6: // APP6\n          case 0xffe7: // APP7\n          case 0xffe8: // APP8\n          case 0xffe9: // APP9\n          case 0xffea: // APP10\n          case 0xffeb: // APP11\n          case 0xffec: // APP12\n          case 0xffed: // APP13\n          case 0xffee: // APP14\n          case 0xffef: // APP15\n          case 0xfffe: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xffe0) {\n              // 'JFIF\\x00'\n              if (\n                appData[0] === 0x4a &&\n                appData[1] === 0x46 &&\n                appData[2] === 0x49 &&\n                appData[3] === 0x46 &&\n                appData[4] === 0\n              ) {\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(\n                    14,\n                    14 + 3 * appData[12] * appData[13]\n                  ),\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xffee) {\n              // 'Adobe'\n              if (\n                appData[0] === 0x41 &&\n                appData[1] === 0x64 &&\n                appData[2] === 0x6f &&\n                appData[3] === 0x62 &&\n                appData[4] === 0x65\n              ) {\n                adobe = {\n                  version: (appData[5] << 8) | appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11],\n                };\n              }\n            }\n            break;\n\n          case 0xffdb: // DQT (Define Quantization Tables)\n            const quantizationTablesLength = readUint16(data, offset);\n            offset += 2;\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                // 16 bit values\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16(data, offset);\n                  offset += 2;\n                }\n              } else {\n                throw new JpegError(\"DQT - invalid table spec\");\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n            if (frame) {\n              throw new JpegError(\"Only single frame JPEGs supported\");\n            }\n            offset += 2; // Skip marker length.\n\n            frame = {};\n            frame.extended = fileMarker === 0xffc1;\n            frame.progressive = fileMarker === 0xffc2;\n            frame.precision = data[offset++];\n            const sofScanLines = readUint16(data, offset);\n            offset += 2;\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16(data, offset);\n            offset += 2;\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n              componentId;\n            var maxH = 0,\n              maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h,\n                v,\n                quantizationId: qId,\n                quantizationTable: null, // See comment below.\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n\n          case 0xffc4: // DHT (Define Huffman Tables)\n            const huffmanLength = readUint16(data, offset);\n            offset += 2;\n            for (i = 2; i < huffmanLength; ) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n                huffmanTableSpec & 15\n              ] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xffdd: // DRI (Define Restart Interval)\n            offset += 2; // Skip marker length.\n\n            resetInterval = readUint16(data, offset);\n            offset += 2;\n            break;\n\n          case 0xffda: // SOS (Start of Scan)\n            // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n            // of the first scan segment and may only occur once in an image.\n            // Furthermore, to prevent an infinite loop, do *not* attempt to\n            // parse DNL markers during re-parsing of the JPEG scan data.\n            const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n            offset += 2; // Skip marker length.\n\n            var selectorsCount = data[offset++];\n            var components = [],\n              component;\n            for (i = 0; i < selectorsCount; i++) {\n              const index = data[offset++];\n              var componentIndex = frame.componentIds[index];\n              component = frame.components[componentIndex];\n              component.index = index;\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(\n                data,\n                offset,\n                frame,\n                components,\n                resetInterval,\n                spectralStart,\n                spectralEnd,\n                successiveApproximation >> 4,\n                successiveApproximation & 15,\n                parseDNLMarker\n              );\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              } else if (ex instanceof EOIMarkerError) {\n                warn(`${ex.message} -- ignoring the rest of the image data.`);\n                break markerLoop;\n              }\n              throw ex;\n            }\n            break;\n\n          case 0xffdc: // DNL (Define Number of Lines)\n            // Ignore the marker, since it's being handled in `decodeScan`.\n            offset += 4;\n            break;\n\n          case 0xffff: // Fill bytes\n            if (data[offset] !== 0xff) {\n              // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            // Could be incorrect encoding -- the last 0xFF byte of the previous\n            // block could have been eaten by the encoder, hence we fallback to\n            // `startPos = offset - 3` when looking for the next valid marker.\n            const nextFileMarker = findNextFileMarker(\n              data,\n              /* currentPos = */ offset - 2,\n              /* startPos = */ offset - 3\n            );\n            if (nextFileMarker && nextFileMarker.invalid) {\n              warn(\n                \"JpegImage.parse - unexpected data, current marker is: \" +\n                  nextFileMarker.invalid\n              );\n              offset = nextFileMarker.offset;\n              break;\n            }\n            if (offset >= data.length - 1) {\n              warn(\n                \"JpegImage.parse - reached the end of the image data \" +\n                  \"without finding an EOI marker (0xFFD9).\"\n              );\n              break markerLoop;\n            }\n            throw new JpegError(\n              \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n            );\n        }\n        fileMarker = readUint16(data, offset);\n        offset += 2;\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n\n        // Prevent errors when DQT markers are placed after SOF{n} markers,\n        // by assigning the `quantizationTable` entry after the entire image\n        // has been parsed (fixes issue7406.pdf).\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n\n        this.components.push({\n          index: component.index,\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn,\n        });\n      }\n      this.numComponents = this.components.length;\n      return undefined;\n    },\n\n    _getLinearizedBlockData(width, height, isSourcePDF = false) {\n      var scaleX = this.width / width,\n        scaleY = this.height / height;\n\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n      let lastComponentScaleX;\n\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = (component.blocksPerLine + 1) << 3;\n        // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n        // component data, that's only necessary when `componentScaleX` changes.\n        if (componentScaleX !== lastComponentScaleX) {\n          for (x = 0; x < width; x++) {\n            j = 0 | (x * componentScaleX);\n            xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n          }\n          lastComponentScaleX = componentScaleX;\n        }\n        // linearize the blocks of the component\n        for (y = 0; y < height; y++) {\n          j = 0 | (y * componentScaleY);\n          index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n\n      // decodeTransform contains pairs of multiplier (-256..256) and additive\n      let transform = this._decodeTransform;\n\n      // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n      // (this can be observed by extracting the raw image data).\n      // Since the conversion algorithms (see below) were written primarily for\n      // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n      // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n      //\n      // Unfortunately it's not (always) possible to tell, from the image data\n      // alone, if it needs to be inverted. Thus in an attempt to provide better\n      // out-of-box behaviour when `JpegImage` is used standalone, default to\n      // inverting JPEG (CMYK) images if and only if the image data does *not*\n      // come from a PDF file and no `decodeTransform` was passed by the user.\n      if (!isSourcePDF && numComponents === 4 && !transform) {\n        // prettier-ignore\n        transform = new Int32Array([\n          -256, 255, -256, 255, -256, 255, -256, 255]);\n      }\n\n      if (transform) {\n        for (i = 0; i < dataLength; ) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n\n    get _isColorConversionNeeded() {\n      if (this.adobe) {\n        // The adobe transform marker overrides any previous setting.\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this._colorTransform === 0) {\n          // If the Adobe transform marker is not present and the image\n          // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n          // then the colours should *not* be transformed.\n          return false;\n        } else if (\n          this.components[0].index === /* \"R\" = */ 0x52 &&\n          this.components[1].index === /* \"G\" = */ 0x47 &&\n          this.components[2].index === /* \"B\" = */ 0x42\n        ) {\n          // If the three components are indexed as RGB in ASCII\n          // then the colours should *not* be transformed.\n          return false;\n        }\n        return true;\n      }\n      // `this.numComponents !== 3`\n      if (this._colorTransform === 1) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n        // then the colours should be transformed.\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n\n        data[offset++] =\n          -122.67195406894 +\n          Cb *\n            (-6.60635669420364e-5 * Cb +\n              0.000437130475926232 * Cr -\n              5.4080610064599e-5 * Y +\n              0.00048449797120281 * k -\n              0.154362151871126) +\n          Cr *\n            (-0.000957964378445773 * Cr +\n              0.000817076911346625 * Y -\n              0.00477271405408747 * k +\n              1.53380253221734) +\n          Y *\n            (0.000961250184130688 * Y -\n              0.00266257332283933 * k +\n              0.48357088451265) +\n          k * (-0.000336197177618394 * k + 0.484791561490776);\n\n        data[offset++] =\n          107.268039397724 +\n          Cb *\n            (2.19927104525741e-5 * Cb -\n              0.000640992018297945 * Cr +\n              0.000659397001245577 * Y +\n              0.000426105652938837 * k -\n              0.176491792462875) +\n          Cr *\n            (-0.000778269941513683 * Cr +\n              0.00130872261408275 * Y +\n              0.000770482631801132 * k -\n              0.151051492775562) +\n          Y *\n            (0.00126935368114843 * Y -\n              0.00265090189010898 * k +\n              0.25802910206845) +\n          k * (-0.000318913117588328 * k - 0.213742400323665);\n\n        data[offset++] =\n          -20.810012546947 +\n          Cb *\n            (-0.000570115196973677 * Cb -\n              2.63409051004589e-5 * Cr +\n              0.0020741088115012 * Y -\n              0.00288260236853442 * k +\n              0.814272968359295) +\n          Cr *\n            (-1.53496057440975e-5 * Cr -\n              0.000132689043961446 * Y +\n              0.000560833691242812 * k -\n              0.195152027534049) +\n          Y *\n            (0.00174418132927582 * Y -\n              0.00255243321439347 * k +\n              0.116935020465145) +\n          k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      // Ensure that only the converted RGB data is returned.\n      return data.subarray(0, offset);\n    },\n\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n        // K in data[i + 3] is unchanged\n      }\n      return data;\n    },\n\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i];\n        m = data[i + 1];\n        y = data[i + 2];\n        k = data[i + 3];\n\n        data[offset++] =\n          255 +\n          c *\n            (-0.00006747147073602441 * c +\n              0.0008379262121013727 * m +\n              0.0002894718188643294 * y +\n              0.003264231057537806 * k -\n              1.1185611867203937) +\n          m *\n            (0.000026374107616089405 * m -\n              0.00008626949158638572 * y -\n              0.0002748769067499491 * k -\n              0.02155688794978967) +\n          y *\n            (-0.00003878099212869363 * y -\n              0.0003267808279485286 * k +\n              0.0686742238595345) -\n          k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n        data[offset++] =\n          255 +\n          c *\n            (0.00013596372813588848 * c +\n              0.000924537132573585 * m +\n              0.00010567359618683593 * y +\n              0.0004791864687436512 * k -\n              0.3109689587515875) +\n          m *\n            (-0.00023545346108370344 * m +\n              0.0002702845253534714 * y +\n              0.0020200308977307156 * k -\n              0.7488052167015494) +\n          y *\n            (0.00006834815998235662 * y +\n              0.00015168452363460973 * k -\n              0.09751927774728933) -\n          k * (0.00031891311758832814 * k + 0.7364883807733168);\n\n        data[offset++] =\n          255 +\n          c *\n            (0.000013598650411385307 * c +\n              0.00012423956175490851 * m +\n              0.0004751985097583589 * y -\n              0.0000036729317476630422 * k -\n              0.05562186980264034) +\n          m *\n            (0.00016141380598724676 * m +\n              0.0009692239130725186 * y +\n              0.0007782692450036253 * k -\n              0.44015232367526463) +\n          y *\n            (5.068882914068769e-7 * y +\n              0.0017778369011375071 * k -\n              0.7591454649749609) -\n          k * (0.0003435319965105553 * k + 0.7063770186160144);\n      }\n      // Ensure that only the converted RGB data is returned.\n      return data.subarray(0, offset);\n    },\n\n    getData({ width, height, forceRGB = false, isSourcePDF = false }) {\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(\n          isSourcePDF === true,\n          'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n        );\n      }\n      if (this.numComponents > 4) {\n        throw new JpegError(\"Unsupported color mode\");\n      }\n      // Type of data: Uint8ClampedArray(width * height * numComponents)\n      var data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n      if (this.numComponents === 1 && forceRGB) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded) {\n          if (forceRGB) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGB) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    },\n  };\n\n  return JpegImage;\n})();\n\nexport { JpegImage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, info, warn } from \"../shared/util.js\";\nimport { log2, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(`JPX error: ${msg}`);\n  }\n}\n\nvar JpxImage = (function JpxImageClosure() {\n  // Table E.1\n  var SubbandsGainLog2 = {\n    LL: 0,\n    LH: 1,\n    HL: 1,\n    HH: 2,\n  };\n\n  // eslint-disable-next-line no-shadow\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = readUint16(data, 0);\n      // No box header, immediate start of codestream (SOC)\n      if (head === 0xff4f) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n\n      var position = 0,\n        length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = readUint32(data, position);\n        var tbox = readUint32(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          // XLBox: read UInt64 according to spec.\n          // JavaScript's int precision of 53 bit should be sufficient here.\n          lbox =\n            readUint32(data, position) * 4294967296 +\n            readUint32(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError(\"Invalid box field size\");\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6a703268: // 'jp2h'\n            jumpDataLength = false; // parsing child boxes\n            break;\n          case 0x636f6c72: // 'colr'\n            // Colorspaces are not used, the CS from the PDF is used.\n            var method = data[position];\n            if (method === 1) {\n              // enumerated colorspace\n              var colorspace = readUint32(data, position + 3);\n              switch (colorspace) {\n                case 16: // this indicates a sRGB colorspace\n                case 17: // this indicates a grayscale colorspace\n                case 18: // this indicates a YUV colorspace\n                  break;\n                default:\n                  warn(\"Unknown colorspace \" + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              info(\"ICC profile not supported\");\n            }\n            break;\n          case 0x6a703263: // 'jp2c'\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6a502020: // 'jP\\024\\024'\n            if (readUint32(data, position) !== 0x0d0a870a) {\n              warn(\"Invalid JP2 signature\");\n            }\n            break;\n          // The following header types are valid but currently not used:\n          case 0x6a501a1a: // 'jP\\032\\032'\n          case 0x66747970: // 'ftyp'\n          case 0x72726571: // 'rreq'\n          case 0x72657320: // 'res '\n          case 0x69686472: // 'ihdr'\n            break;\n          default:\n            var headerType = String.fromCharCode(\n              (tbox >> 24) & 0xff,\n              (tbox >> 16) & 0xff,\n              (tbox >> 8) & 0xff,\n              tbox & 0xff\n            );\n            warn(\"Unsupported header type \" + tbox + \" (\" + headerType + \")\");\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = (oldByte << 8) | newByte;\n        // Image and tile size (SIZ)\n        if (code === 0xff51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0; // Byte 4\n          var Ysiz = stream.getInt32() >>> 0; // Byte 8\n          var XOsiz = stream.getInt32() >>> 0; // Byte 12\n          var YOsiz = stream.getInt32() >>> 0; // Byte 16\n          stream.skip(16);\n          var Csiz = stream.getUint16(); // Byte 36\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          // Results are always returned as `Uint8ClampedArray`s.\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError(\"No size marker found in JPX stream\");\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = readUint16(data, position);\n          position += 2;\n\n          var length = 0,\n            j,\n            sqcd,\n            spqcds,\n            spqcdSize,\n            scalarExpounded,\n            tile;\n          switch (code) {\n            case 0xff4f: // Start of codestream (SOC)\n              context.mainHeader = true;\n              break;\n            case 0xffd9: // End of codestream (EOC)\n              break;\n            case 0xff51: // Image and tile size (SIZ)\n              length = readUint16(data, position);\n              var siz = {};\n              siz.Xsiz = readUint32(data, position + 4);\n              siz.Ysiz = readUint32(data, position + 8);\n              siz.XOsiz = readUint32(data, position + 12);\n              siz.YOsiz = readUint32(data, position + 16);\n              siz.XTsiz = readUint32(data, position + 20);\n              siz.YTsiz = readUint32(data, position + 24);\n              siz.XTOsiz = readUint32(data, position + 28);\n              siz.YTOsiz = readUint32(data, position + 32);\n              var componentsCount = readUint16(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7f) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2],\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xff5c: // Quantization default (QCD)\n              length = readUint16(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1f) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error(\"Invalid SQcd value \" + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xff5d: // Quantization component (QCC)\n              length = readUint16(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = readUint16(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1f) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error(\"Invalid SQcd value \" + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xff52: // Coding style default (COD)\n              length = readUint16(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = readUint16(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xf) + 2;\n              cod.ycb = (data[j++] & 0xf) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xf,\n                    PPy: precinctsSize >> 4,\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push(\"selectiveArithmeticCodingBypass\");\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push(\"resetContextProbabilities\");\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push(\"terminationOnEachCodingPass\");\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push(\"verticallyStripe\");\n              }\n              if (cod.predictableTermination) {\n                unsupported.push(\"predictableTermination\");\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error(\n                  \"Unsupported COD options (\" + unsupported.join(\", \") + \")\"\n                );\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xff90: // Start of tile-part (SOT)\n              length = readUint16(data, position);\n              tile = {};\n              tile.index = readUint16(data, position + 2);\n              tile.length = readUint32(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                // reset component specific settings\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0); // clone of the global COC\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0); // clone of the global COC\n              }\n              context.currentTile = tile;\n              break;\n            case 0xff93: // Start of data (SOD)\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n\n              // moving to the end of the data\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xff55: // Tile-part lengths, main header (TLM)\n            case 0xff57: // Packet length, main header (PLM)\n            case 0xff58: // Packet length, tile-part header (PLT)\n            case 0xff64: // Comment (COM)\n              length = readUint16(data, position);\n              // skipping content\n              break;\n            case 0xff53: // Coding style component (COC)\n              throw new Error(\n                \"Codestream code 0xFF53 (COC) is not implemented\"\n              );\n            default:\n              throw new Error(\"Unknown codestream code: \" + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          warn(\"JPX: Trying to recover from: \" + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    },\n  };\n  function calculateComponentDimensions(component, siz) {\n    // Section B.2 Component mapping\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    // Section B.3 Division into tile and tile-components\n    var tile,\n      tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    // calculate codeblock size as described in section B.7\n    result.xcb_ =\n      r > 0\n        ? Math.min(codOrCoc.xcb, result.PPx - 1)\n        : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ =\n      r > 0\n        ? Math.min(codOrCoc.ycb, result.PPy - 1)\n        : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    // Section B.6 Division resolution to precincts\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    // Jasper introduces codeblock groups for mapping each subband codeblocks\n    // to precincts. Precinct partition divides a resolution according to width\n    // and height parameters. The subband that belongs to the resolution level\n    // has a different size than the level, unless it is the zero resolution.\n\n    // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n    // The precinct partitioning for a particular subband is derived from a\n    // partitioning of its parent LL band (i.e., the LL band at the next higher\n    // resolution level)... The LL band associated with each resolution level is\n    // divided into precincts... Each of the resulting precinct regions is then\n    // mapped into its child subbands (if any) at the next lower resolution\n    // level. This is accomplished by using the coordinate transformation\n    // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n    // coordinates of a point in the LL band and child subband, respectively.\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n    var precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n    var numprecinctswide =\n      resolution.trx1 > resolution.trx0\n        ? Math.ceil(resolution.trx1 / precinctWidth) -\n          Math.floor(resolution.trx0 / precinctWidth)\n        : 0;\n    var numprecinctshigh =\n      resolution.try1 > resolution.try0\n        ? Math.ceil(resolution.try1 / precinctHeight) -\n          Math.floor(resolution.try0 / precinctHeight)\n        : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n\n    resolution.precinctParameters = {\n      precinctWidth,\n      precinctHeight,\n      numprecinctswide,\n      numprecinctshigh,\n      numprecincts,\n      precinctWidthInSubband,\n      precinctHeightInSubband,\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    // Section B.7 Division sub-band into code-blocks\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n    var cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1),\n        };\n\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n        // Calculate precinct number for this codeblock, codeblock position\n        // should be relative to its subband, use actual dimension and position\n        // See comment about codeblock group width and height\n        var pi = Math.floor(\n          (codeblock.tbx0_ - subband.tbx0) /\n            precinctParameters.precinctWidthInSubband\n        );\n        var pj = Math.floor(\n          (codeblock.tby0_ - subband.tby0) /\n            precinctParameters.precinctHeightInSubband\n        );\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n\n        if (\n          codeblock.tbx1_ <= codeblock.tbx0_ ||\n          codeblock.tby1_ <= codeblock.tby0_\n        ) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        // building precinct for the sub-band\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j,\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1,\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    // Section B.10.8 Order of info in packet\n    var subbands = resolution.subbands;\n    // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber,\n      codeblocks: precinctCodeblocks,\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(\n        maxDecompositionLevelsCount,\n        tile.components[q].codingStyleParameters.decompositionLevelsCount\n      );\n    }\n\n    var l = 0,\n      r = 0,\n      i = 0,\n      k = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.1 Layer-resolution-component-position\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts; ) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError(\"Out of packets\");\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(\n        maxDecompositionLevelsCount,\n        tile.components[q].codingStyleParameters.decompositionLevelsCount\n      );\n    }\n\n    var r = 0,\n      l = 0,\n      i = 0,\n      k = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.2 Resolution-layer-component-position\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts; ) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError(\"Out of packets\");\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      const component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(\n        maxDecompositionLevelsCount,\n        component.codingStyleParameters.decompositionLevelsCount\n      );\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(\n      maxDecompositionLevelsCount + 1\n    );\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(\n            maxNumPrecincts,\n            resolutions[r].precinctParameters.numprecincts\n          );\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.3 Resolution-position-component-layer\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            const component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError(\"Out of packets\");\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n      r = 0,\n      c = 0,\n      px = 0,\n      py = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.4 Position-component-resolution-layer\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount =\n              component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale =\n                precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(\n                px,\n                py,\n                sizeInImageScale,\n                precinctsIterationSizes,\n                resolution\n              );\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount; ) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError(\"Out of packets\");\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n      r = 0,\n      c = 0,\n      px = 0,\n      py = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.5 Component-position-resolution-layer\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(\n                px,\n                py,\n                sizeInImageScale,\n                precinctsIterationSizes,\n                resolution\n              );\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount; ) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError(\"Out of packets\");\n    };\n  }\n  function getPrecinctIndexIfExist(\n    pxIndex,\n    pyIndex,\n    sizeInImageScale,\n    precinctIterationSizes,\n    resolution\n  ) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (\n      posX % sizeInImageScale.width !== 0 ||\n      posY % sizeInImageScale.height !== 0\n    ) {\n      return null;\n    }\n    var startPrecinctRowIndex =\n      (posY / sizeInImageScale.width) *\n      resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution =\n          scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution =\n          scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(\n          minWidthCurrentComponent,\n          widthCurrentResolution\n        );\n        minHeightCurrentComponent = Math.min(\n          minHeightCurrentComponent,\n          heightCurrentResolution\n        );\n        maxNumWideCurrentComponent = Math.max(\n          maxNumWideCurrentComponent,\n          resolution.precinctParameters.numprecinctswide\n        );\n        maxNumHighCurrentComponent = Math.max(\n          maxNumHighCurrentComponent,\n          resolution.precinctParameters.numprecinctshigh\n        );\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution,\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent,\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth,\n      minHeight,\n      maxNumWide,\n      maxNumHigh,\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    // Creating resolutions and sub-bands for each component\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      // Section B.5 Resolution levels and sub-bands\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << (decompositionLevelsCount - r);\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n\n        var subband;\n        if (r === 0) {\n          // one sub-band (LL) with last decomposition\n          subband = {};\n          subband.type = \"LL\";\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << (decompositionLevelsCount - r + 1);\n          var resolutionSubbands = [];\n          // three sub-bands (HL, LH and HH) with rest of decompositions\n          subband = {};\n          subband.type = \"HL\";\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          subband = {};\n          subband.type = \"LH\";\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          subband = {};\n          subband.type = \"HH\";\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    // Generate the packets sequence\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n          context\n        );\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n          context\n        );\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n          context\n        );\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n          context\n        );\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n          context\n        );\n        break;\n      default:\n        throw new JpxError(`Unsupported progression order ${progressionOrder}`);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n      bufferSize = 0,\n      skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = (buffer << 7) | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = (buffer << 8) | b;\n          bufferSize += 8;\n        }\n        if (b === 0xff) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return (buffer >>> bufferSize) & ((1 << count) - 1);\n    }\n    function skipMarkerIfEqual(value) {\n      if (\n        data[offset + position - 1] === 0xff &&\n        data[offset + position] === value\n      ) {\n        skipBytes(1);\n        return true;\n      } else if (\n        data[offset + position] === 0xff &&\n        data[offset + position + 1] === value\n      ) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        // Skip also marker segment length and packet sequence ID\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n        codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock.included !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          // reading inclusion tree\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct.inclusionTree !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            // building inclusion and zero bit-planes trees\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = log2(codingpasses);\n        // rounding down log2\n        var bits =\n          (codingpasses < 1 << codingpassesLog2\n            ? codingpassesLog2 - 1\n            : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock,\n          codingpasses,\n          dataLength: codedDataLength,\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock.data === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses,\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(\n    coefficients,\n    levelWidth,\n    levelHeight,\n    subband,\n    delta,\n    mb,\n    reversible,\n    segmentationSymbolUsed\n  ) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n    var bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock.data === undefined) {\n        continue;\n      }\n\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(\n        blockWidth,\n        blockHeight,\n        codeblock.subbandType,\n        codeblock.zeroBitPlanes,\n        mb\n      );\n      currentCodingpassType = 2; // first bit plane starts from cleanup\n\n      // collect data\n      var data = codeblock.data,\n        totalLength = 0,\n        codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      // decoding the item\n      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      // Do the interleaving of Section F.3.3 here, so we do not need\n      // to copy later. LL level is not interleaved, just copied.\n      var interleave = subband.type !== \"LL\";\n      for (j = 0; j < blockHeight; j++) {\n        var row = (offset / width) | 0; // row in the non-interleaved subband\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << (mb - nb));\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount =\n      codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible\n      ? new ReversibleTransform()\n      : new IrreversibleTransform();\n\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      // Allocate space for the whole sublevel.\n      var coefficients = new Float32Array(width * height);\n\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          // formula E-5\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n\n        // calculate quantization coefficient (Section E.1.1.1)\n        var delta = reversible\n          ? 1\n          : 2 ** (precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n\n        // In the first resolution level, copyCoefficients will fill the\n        // whole array with coefficients. In the succeeding passes,\n        // copyCoefficients will consecutively fill in the values that belong\n        // to the interleaved positions of the HL, LH, and HH coefficients.\n        // The LL coefficients will then be interleaved in Transform.iterate().\n        copyCoefficients(\n          coefficients,\n          width,\n          height,\n          subband,\n          delta,\n          mb,\n          reversible,\n          segmentationSymbolUsed\n        );\n      }\n      subbandCoefficients.push({\n        width,\n        height,\n        items: coefficients,\n      });\n    }\n\n    var result = transform.calculate(\n      subbandCoefficients,\n      component.tcx0,\n      component.tcy0\n    );\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items,\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out,\n      };\n\n      // Section G.2.2 Inverse multi component transform\n      var shift, offset;\n      var pos = 0,\n        j,\n        jj,\n        y0,\n        y1,\n        y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n\n        // HACK: The multiple component transform formulas below assume that\n        // all components have the same precision. With this in mind, we\n        // compute shift and offset only once.\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          // inverse irreversible multiple component transform\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = (y0 + 1.402 * y2) >> shift;\n            out[pos++] = (y0 - 0.34413 * y1 - 0.71414 * y2) >> shift;\n            out[pos++] = (y0 + 1.772 * y1) >> shift;\n          }\n        } else {\n          // inverse reversible multiple component transform\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            const g = y0 - ((y2 + y1) >> 2);\n\n            out[pos++] = (g + y2) >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = (g + y1) >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = (y3items[j] + offset) >> shift;\n          }\n        }\n      } else {\n        // no multi-component transform\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = (items[j] + offset) >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc =\n        context.currentTile.QCC[c] !== undefined\n          ? context.currentTile.QCC[c]\n          : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc =\n        context.currentTile.COC[c] !== undefined\n          ? context.currentTile.COC[c]\n          : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n\n  // Section B.10.2 Tag trees\n  var TagTree = (function TagTreeClosure() {\n    // eslint-disable-next-line no-shadow\n    function TagTree(width, height) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width,\n          height,\n          items: [],\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n          value = 0,\n          level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      },\n    };\n    return TagTree;\n  })();\n\n  var InclusionTree = (function InclusionTreeClosure() {\n    // eslint-disable-next-line no-shadow\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n\n        var level = {\n          width,\n          height,\n          items,\n        };\n        this.levels.push(level);\n\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n\n          if (value === 0xff) {\n            break;\n          }\n\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            // already know about this one, propagating the value to top levels\n            this.propagateValues();\n            return false;\n          }\n\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xff;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      },\n    };\n    return InclusionTree;\n  })();\n\n  // Section D. Coefficient bit modeling\n  var BitModel = (function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    // Table D-1\n    // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n    // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n    // prettier-ignore\n    var LLAndLHContextsLabel = new Uint8Array([\n      0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n      7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n      8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8\n    ]);\n    // prettier-ignore\n    var HLContextLabel = new Uint8Array([\n      0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n      8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n      4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8\n    ]);\n    // prettier-ignore\n    var HHContextLabel = new Uint8Array([\n      0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n      5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n      8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8\n    ]);\n\n    // eslint-disable-next-line no-shadow\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n\n      let contextLabelTable;\n      if (subband === \"HH\") {\n        contextLabelTable = HHContextLabel;\n      } else if (subband === \"HL\") {\n        contextLabelTable = HLContextLabel;\n      } else {\n        contextLabelTable = LLAndLHContextsLabel;\n      }\n      this.contextLabelTable = contextLabelTable;\n\n      var coefficientCount = width * height;\n\n      // coefficients outside the encoding region treated as insignificant\n      // add border state cells for significanceState\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      let coefficentsMagnitude;\n      if (mb > 14) {\n        coefficentsMagnitude = new Uint32Array(coefficientCount);\n      } else if (mb > 6) {\n        coefficentsMagnitude = new Uint16Array(coefficientCount);\n      } else {\n        coefficentsMagnitude = new Uint8Array(coefficientCount);\n      }\n      this.coefficentsMagnitude = coefficentsMagnitude;\n      this.processingFlags = new Uint8Array(coefficientCount);\n\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n\n      this.reset();\n    }\n\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        // We have 17 contexts that are accessed via context labels,\n        // plus the uniform and runlength context.\n        this.contexts = new Int8Array(19);\n\n        // Contexts are packed into 1 byte:\n        // highest 7 bits carry the index, lowest bit carries mps\n        this.contexts[0] = (4 << 1) | 0;\n        this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(\n        row,\n        column,\n        index\n      ) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n          height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n          height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              // clear processed flag first\n              processingFlags[index] &= processedInverseMask;\n\n              if (\n                coefficentsMagnitude[index] ||\n                !neighborsSignificance[index]\n              ) {\n                continue;\n              }\n\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n          height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n\n        // calculate horizontal contribution\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n\n        // calculate vertical contribution and combine with the horizontal\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n          height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              // significant but not those that have just become\n              if (\n                !coefficentsMagnitude[index] ||\n                (processingFlags[index] & processedMask) !== 0\n              ) {\n                continue;\n              }\n\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                // first refinement\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] =\n                (coefficentsMagnitude[index] << 1) | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n          height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            // using the property: labels[neighborsSignificance[index]] === 0\n            // when neighborsSignificance[index] === 0\n            var allEmpty =\n              checkAllEmpty &&\n              processingFlags[index0] === 0 &&\n              processingFlags[index0 + oneRowDown] === 0 &&\n              processingFlags[index0 + twoRowsDown] === 0 &&\n              processingFlags[index0 + threeRowsDown] === 0 &&\n              neighborsSignificance[index0] === 0 &&\n              neighborsSignificance[index0 + oneRowDown] === 0 &&\n              neighborsSignificance[index0 + twoRowsDown] === 0 &&\n              neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n              index = index0;\n            var i = i0,\n              sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(\n                contexts,\n                RUNLENGTH_CONTEXT\n              );\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue; // next column\n              }\n              i1 =\n                (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (\n                coefficentsMagnitude[index] ||\n                (processingFlags[index] & processedMask) !== 0\n              ) {\n                continue;\n              }\n\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol =\n          (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n          (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n          (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n          decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xa) {\n          throw new JpxError(\"Invalid segmentation symbol\");\n        }\n      },\n    };\n\n    return BitModel;\n  })();\n\n  // Section F, Discrete wavelet transformation\n  var Transform = (function TransformClosure() {\n    // eslint-disable-next-line no-shadow\n    function Transform() {}\n\n    Transform.prototype.calculate = function transformCalculate(\n      subbands,\n      u0,\n      v0\n    ) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      // Section F.3.7 extending... using max extension of 4\n      var i1 = offset - 1,\n        j1 = offset + 1;\n      var i2 = offset + size - 2,\n        j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(\n      ll,\n      hl_lh_hh,\n      u0,\n      v0\n    ) {\n      var llWidth = ll.width,\n        llHeight = ll.height,\n        llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n\n      // Interleave LL according to Section F.3.3\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      // The LL band is not needed anymore.\n      llItems = ll.items = null;\n\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n      // Section F.3.4 HOR_SR\n      if (width === 1) {\n        // if width = 1, when u0 even keep items as is, when odd divide by 2\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n\n          items.set(\n            rowBuffer.subarray(bufferPadding, bufferPadding + width),\n            k\n          );\n        }\n      }\n\n      // Accesses to the items array can take long, because it may not fit into\n      // CPU cache and has to be fetched from main memory. Since subsequent\n      // accesses to the items array are not local when reading columns, we\n      // have a cache miss every time. To reduce cache misses, get up to\n      // 'numBuffers' items at a time and store them into the individual\n      // buffers. The colBuffers should be small enough to fit into CPU cache.\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n        currentBuffer = 0;\n      ll = bufferPadding + height;\n\n      // Section F.3.5 VER_SR\n      if (height === 1) {\n        // if height = 1, when v0 even keep items as is, when odd divide by 2\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          // if we ran out of buffers, copy several image columns at once\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n\n          // If this is last buffer in this group of buffers, flush all buffers.\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        width,\n        height,\n        items,\n      };\n    };\n    return Transform;\n  })();\n\n  // Section 3.8.2 Irreversible 9-7 filter\n  var IrreversibleTransform = (function IrreversibleTransformClosure() {\n    // eslint-disable-next-line no-shadow\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(\n      x,\n      offset,\n      length\n    ) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n\n      // step 1 is combined with step 3\n\n      // step 2\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n\n      // step 1 & 3\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n\n      // step 4\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n\n      // step 5\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n\n      // step 6\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n\n    return IrreversibleTransform;\n  })();\n\n  // Section 3.8.1 Reversible 5-3 filter\n  var ReversibleTransform = (function ReversibleTransformClosure() {\n    // eslint-disable-next-line no-shadow\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(\n      x,\n      offset,\n      length\n    ) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n      }\n\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += (x[j - 1] + x[j + 1]) >> 1;\n      }\n    };\n\n    return ReversibleTransform;\n  })();\n\n  return JpxImage;\n})();\n\nexport { JpxImage };\n"],"sourceRoot":""}